#-------------------------------------------
#  Custom Button Card Templates
#  https://github.com/custom-cards/button-card
#-------------------------------------------
button_card_templates: !include_dir_merge_named btn_card_templates/

#-------------------------------------------
#  Kiosk Mode
#  https://github.com/maykar/kiosk-mode
#-------------------------------------------
kiosk_mode:
  hide_header: false
  hide_sidebar: false
  hide_overflow: false

  mobile_settings:
    hide_header: false
    hide_sidebar: false
    hide_overflow: false
    custom_width: 800

#-------------------------------------------
#  Default View
#-------------------------------------------
views:
  - type: custom:grid-layout
    path: 0
    layout:
      #default
      grid-gap: var(--custom-layout-card-padding)
      grid-template-columns: repeat(5, 1fr) 0
      grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
      grid-template-areas: |
        "sidebar  .           .        .          .        ."
        "sidebar  plex        media    bedroom    temps    ."
        "sidebar  camera      outside  home       misc     ."
        "sidebar  footer      footer   footer     footer   ."
      mediaquery:
        #phone
        "(max-width: 800px)":
          grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
          grid-template-columns: 0 repeat(2, 1fr) 0
          grid-template-rows: 0 repeat(6, fit-content(100%)) 0fr
          grid-template-areas: |
            ".  .           .            ."
            ".  sidebar     sidebar      ."
            ".  home        bedroom      ."
            ".  media       outside      ."
            ".  camera      plex         ."
            ".  temps       misc         ."
            ".  footer      footer       ."
            ".  .           .            ."
        #portrait
        "(max-width: 1200px)":
          grid-gap: var(--custom-layout-card-padding)
          grid-template-columns: repeat(3, 1fr) 0
          grid-template-rows: 0 repeat(4, fit-content(100%)) 0fr
          grid-template-areas: |
            "sidebar  .           .           ."
            "sidebar  home        bedroom     ."
            "sidebar  media       outside     ."
            "sidebar  camera      plex        ."
            "sidebar  temps       misc        ."
            "sidebar  footer      footer      ."
            "sidebar  .           .           ."
    cards:
        #extra_styles fix
      - type: custom:button-card #extra_styles fix
        styles: {card: [display: none]}

      #################################################
      #                                               #
      #                    SIDEBAR                    #
      #                                               #
      #################################################

      - type: vertical-stack
        view_layout:
          grid-area: sidebar
        cards:
          - type: custom:button-card
            entity: sensor.template_sidebar
            template: sidebar

      #################################################
      #                                               #
      #                    PLEX                       #
      #                                               #
      #################################################

      - type: grid
        title: Plex
        view_layout:
          grid-area: plex
        columns: 1
        cards:

          - type: custom:swipe-card
            parameters:
              speed: 550
              spaceBetween: 40
              threshold: 5
              autoplay:
                delay: 20000
            cards:

              - type: custom:button-card
                entity: sensor.plex_recently_added
                tap_action:
                  action: none
                template:
                  - conditional_media
                  - recently_added
                  - icon_plex
                variables:
                  download_index: >
                    [[[
                      return parseInt('1');
                    ]]]

              - type: custom:button-card
                entity: sensor.plex_recently_added
                tap_action:
                  action: none
                template:
                  - conditional_media
                  - recently_added
                  - icon_plex
                variables:
                  download_index: >
                    [[[
                      return parseInt('2');
                    ]]]

              - type: custom:button-card
                entity: sensor.plex_recently_added
                tap_action:
                  action: none
                template:
                  - conditional_media
                  - recently_added
                  - icon_plex
                variables:
                  download_index: >
                    [[[
                      return parseInt('3');
                    ]]]

      #################################################
      #                                               #
      #                    MEDIA                      #
      #                                               #
      #################################################

      - type: grid
        title: Media
        view_layout:
          grid-area: media
        columns: 2
        cards:

          - type: custom:button-card
            entity: media_player.yamaha_receiver_family_room
            name: Yamaha
            template:
              - base
              - icon_monitors
              - circle
              - loader
            hold_action:
              !include popup/media_yamaha.yaml
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    parseInt(entity.attributes.volume_level * 100);
                ]]]

          - type: custom:button-card
            entity: media_player.living_room_tv
            name: TV
            hold_action:
              !include popup/family_room_tv.yaml
            template:
              - base
              - icon_tv

      #################################################
      #                                               #
      #                   BEDROOM                     #
      #                                               #
      #################################################

      - type: grid
        title: Bedroom
        view_layout:
          grid-area: bedroom
        columns: 2
        cards:

          - type: custom:button-card
            entity: light.oli_night_light
            name: Oli Night
            template:
              - light
              - icon_shade

      #################################################
      #                                               #
      #                   CAMERAS                     #
      #                                               #
      #################################################

      - type: grid
        title: Cameras
        view_layout:
          grid-area: camera
        columns: 1
        cards:

          - type: custom:swipe-card
            start_card: 1
            parameters:
              speed: 550
              spaceBetween: 40
              threshold: 5
            cards:
              - type: grid
                columns: 1
                cards:
                  - type: 'custom:webrtc-camera'
                    entity: camera.masterbedroom
                    poster: https://home-assistant.io/images/cast/splash.png
                    muted: true
                    background: true

              - type: grid
                columns: 1
                cards:
                  - type: 'custom:webrtc-camera'
                    entity: camera.olibedroom
                    poster: https://home-assistant.io/images/cast/splash.png
                    muted: true
                    background: true

              - type: grid
                columns: 1
                cards:
                  - type: 'custom:webrtc-camera'
                    entity: camera.garage
                    poster: https://home-assistant.io/images/cast/splash.png
                    muted: true
                    background: true

              - type: grid
                columns: 1
                cards:
                  - type: 'custom:webrtc-camera'
                    entity: camera.floating
                    poster: https://home-assistant.io/images/cast/splash.png
                    muted: true
                    background: true

      #################################################
      #                                               #
      #                  Outside                      #
      #                                               #
      #################################################

      - type: grid
        title: Outside
        view_layout:
          grid-area: outside
        columns: 2
        cards:

          - type: custom:button-card
            entity: light.outside_front_door_light
            name: Front
            template:
              - base
              - loader
              - icon_hue

          - type: custom:button-card
            entity: lock.front_door
            name: Door
            template:
              - base
              - loader
              - lock
              - icon_closet
            variables:
              lock: >
                [[[
                  let lock = states['lock.front_door'];
                  return lock === undefined || lock.state;
                ]]]

          - type: custom:button-card
            entity: light.outside_garage_lights
            name: Garage
            template:
              - base
              - loader
              - icon_hue

          - type: custom:button-card
            entity: binary_sensor.garage_contact
            name: Garage
            tap_action:
              !include popup/home_garage.yaml
            template:
              - base
              - icon_garage

      #################################################
      #                                               #
      #                    HOME                       #
      #                                               #
      #################################################

      - type: grid
        title: Home
        view_layout:
          grid-area: home
        columns: 2
        cards:

          - type: custom:button-card
            entity: person.weston
            name: Weston
            triggers_update:
              - sensor.weston_last_changed
            tap_action:
              !include popup/home_weston.yaml
            hold_action:
              action: none
            variables:
              retain: sensor.weston_last_changed
            template: person

          - type: custom:button-card
            entity: person.ana
            name: Ana
            triggers_update:
              - sensor.ana_last_changed
            tap_action:
              !include popup/home_ana.yaml
            hold_action:
              action: none
            variables:
              retain: sensor.ana_last_changed
            template: person

          - type: custom:button-card
            entity: climate.thermostat
            name: Climate
            tap_action:
              !include popup/climate_status.yaml
            template:
              - base
              - icon_ac
              - climate
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    entity.attributes.temperature;
                ]]]

          - type: custom:button-card
            entity: input_boolean.fresh_air_mode_en
            name: Air Mode
            template:
              - base
              - icon_toggle

      #################################################
      #                                               #
      #                    TEMPS                      #
      #                                               #
      #################################################

      - type: grid
        title: Sensors
        view_layout:
          grid-area: temps
        columns: 1
        cards:
          - type: custom:swipe-card
            parameters:
              speed: 550
              spaceBetween: 40
              threshold: 5
            cards:
              - type: grid
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: sensor.garage_temp_temperature
                    name: Garage
                    tap_action:
                      action: none
                    custom_fields:
                      graph:
                        card:
                          entities:
                            - sensor.garage_temp_temperature
                    template: temp

                  - type: custom:button-card
                    entity: sensor.thermostat_current_temperature
                    name: Office
                    tap_action:
                      action: none
                    custom_fields:
                      graph:
                        card:
                          entities:
                            - sensor.thermostat_current_temperature
                    template: temp

                  - type: custom:button-card
                    entity: sensor.basement_temperature
                    name: Basement
                    tap_action:
                      action: none
                    custom_fields:
                      graph:
                        card:
                          entities:
                            - sensor.basement_temperature
                    template: temp

                  - type: custom:button-card
                    entity: sensor.dark_sky_apparent_temperature
                    name: Outside
                    tap_action:
                      action: none
                    custom_fields:
                      graph:
                        card:
                          entities:
                            - sensor.dark_sky_apparent_temperature
                    template: temp

              - type: grid
                columns: 1
                cards:
                  - type: custom:button-card
                    template:
                      - battery_base
                    styles:
                      name:
                        - font-size: 14px
                        - font-weight: bold
                        - top: 20px
                        - left: 20px
                        - position: absolute
                      custom_fields:
                        frontdoor:
                          - top: 40px
                          - left: '-5px'
                          - width: 110%
                          - border-top: 1px solid rgb(255,255,255,0.1)
                          - border-bottom: 1px solid rgb(255,255,255,0.1)
                          - padding: 10px
                          - position: absolute
                          - font-size: 16px
                          - text-shadow: 0px 0px 1px black
                        frontdoorbattery:
                          - top: 60px
                          - right: 15px
                          - position: absolute
                          - font-size: 14px
                        officewindow:
                          - top: 100px
                          - left: '-5px'
                          - width: 110%
                          - border-bottom: 1px solid rgb(255,255,255,0.1)
                          - padding: 10px
                          - position: absolute
                          - font-size: 16px
                          - text-shadow: 0px 0px 1px black
                        officewindowbattery:
                          - top: 120px
                          - right: 15px
                          - position: absolute
                          - font-size: 14px
                        diningroomwindow:
                          - top: 160px
                          - left: '-5px'
                          - width: 110%
                          - border-bottom: 1px solid rgb(255,255,255,0.1)
                          - padding: 10px
                          - position: absolute
                          - font-size: 16px
                          - text-shadow: 0px 0px 1px black
                        diningroomwindowbattery:
                          - top: 180px
                          - right: 15px
                          - position: absolute
                          - font-size: 14px
                        masterbedroomwindow:
                          - top: 220px
                          - left: '-5px'
                          - width: 110%
                          - border-bottom: 1px solid rgb(255,255,255,0.1)
                          - padding: 10px
                          - position: absolute
                          - font-size: 16px
                          - text-shadow: 0px 0px 1px black
                        masterbedroombattery:
                          - top: 240px
                          - right: 15px
                          - position: absolute
                          - font-size: 14px
                        garagesensor:
                          - top: 280px
                          - left: '-5px'
                          - width: 110%
                          - border-bottom: 1px solid rgb(255,255,255,0.1)
                          - padding: 10px
                          - position: absolute
                          - font-size: 16px
                          - text-shadow: 0px 0px 1px black
                        garagesensorbattery:
                          - top: 300px
                          - right: 15px
                          - position: absolute
                          - font-size: 14px

                    custom_fields:
                      frontdoor: |
                        [[[
                          return `<div align="left"> <ha-icon
                            icon="mdi:lock-outline"
                            style="width: 20px; height: 20px; color:grey; padding: 10px;">
                            </ha-icon>Front Door</div>`;
                        ]]]
                      frontdoorbattery: |
                        [[[
                          let entity_level = parseInt(states["sensor.front_door_battery"].state),
                            input = entity_level / 3,
                            color = 'red';

                          if (entity_level > 40) {
                            color = '#08ff4e';
                          } else if (entity_level > 15) {
                            color = 'orange';
                          }

                          return `
                            <svg width="86" height="24">
                              <rect x="45" y="1" rx="5" ry="5" width="40" height="18" stroke="gray" fill="transparent" stroke-width="2"/>
                              <rect x="48" y="4" rx="3" ry="3" width="${input}" height="12" fill="${color}" stroke-width="0"/>
                              <text x="5" y="15" fill="grey">${entity_level}%</text>
                          `;
                        ]]]
                      officewindow: |
                        [[[
                          return `<div align="left"> <ha-icon
                              icon="mdi:window-closed-variant"
                              style="width: 20px; height: 20px; color:grey; padding: 10px;">
                              </ha-icon>Office Window</div>`;
                        ]]]
                      officewindowbattery: |
                        [[[
                          let entity_level = parseInt(states["sensor.office_window_battery"].state),
                            input = entity_level / 3,
                            color = 'red';

                          if (entity_level > 40) {
                            color = '#08ff4e';
                          } else if (entity_level > 15) {
                            color = 'orange';
                          }

                          return `
                            <svg width="86" height="24">
                              <rect x="45" y="1" rx="5" ry="5" width="40" height="18" stroke="gray" fill="transparent" stroke-width="2"/>
                              <rect x="48" y="4" rx="3" ry="3" width="${input}" height="12" fill="${color}" stroke-width="0"/>
                              <text x="5" y="15" fill="grey">${entity_level}%</text>
                          `;
                        ]]]
                      diningroomwindow: |
                        [[[
                          return `<div align="left"> <ha-icon
                              icon="mdi:window-closed-variant"
                              style="width: 20px; height: 20px; color:grey; padding: 10px;">
                              </ha-icon>Dining Room Window</div>`;
                        ]]]
                      diningroomwindowbattery: |
                        [[[
                          let entity_level = parseInt(states["sensor.dining_room_window_battery"].state),
                            input = entity_level / 3,
                            color = 'red';

                          if (entity_level > 40) {
                            color = '#08ff4e';
                          } else if (entity_level > 15) {
                            color = 'orange';
                          }

                          return `
                            <svg width="86" height="24">
                              <rect x="45" y="1" rx="5" ry="5" width="40" height="18" stroke="gray" fill="transparent" stroke-width="2"/>
                              <rect x="48" y="4" rx="3" ry="3" width="${input}" height="12" fill="${color}" stroke-width="0"/>
                              <text x="5" y="15" fill="grey">${entity_level}%</text>
                          `;
                        ]]]
                      masterbedroomwindow: |
                        [[[
                          return `<div align="left"> <ha-icon
                              icon="mdi:window-closed-variant"
                              style="width: 20px; height: 20px; color:grey; padding: 10px;">
                              </ha-icon>Master Bedroom Window</div>`;
                        ]]]
                      masterbedroombattery: |
                        [[[
                          let entity_level = parseInt(states["sensor.master_bedroom_window_battery"].state),
                            input = entity_level / 3,
                            color = 'red';

                          if (entity_level > 40) {
                            color = '#08ff4e';
                          } else if (entity_level > 15) {
                            color = 'orange';
                          }

                          return `
                            <svg width="86" height="24">
                              <rect x="45" y="1" rx="5" ry="5" width="40" height="18" stroke="gray" fill="transparent" stroke-width="2"/>
                              <rect x="48" y="4" rx="3" ry="3" width="${input}" height="12" fill="${color}" stroke-width="0"/>
                              <text x="5" y="15" fill="grey">${entity_level}%</text>
                          `;
                        ]]]
                      garagesensor: |
                        [[[
                          return `<div align="left"> <ha-icon
                              icon="mdi:garage"
                              style="width: 20px; height: 20px; color:grey; padding: 10px;">
                              </ha-icon>Garage</div>`;
                        ]]]
                      garagesensorbattery: |
                        [[[
                          let entity_level = parseInt(states["sensor.garage_temp_battery"].state),
                            input = entity_level / 3,
                            color = 'red';

                          if (entity_level > 40) {
                            color = '#08ff4e';
                          } else if (entity_level > 15) {
                            color = 'orange';
                          }

                          return `
                            <svg width="86" height="24">
                              <rect x="45" y="1" rx="5" ry="5" width="40" height="18" stroke="gray" fill="transparent" stroke-width="2"/>
                              <rect x="48" y="4" rx="3" ry="3" width="${input}" height="12" fill="${color}" stroke-width="0"/>
                              <text x="5" y="15" fill="grey">${entity_level}%</text>
                          `;
                        ]]]

      #################################################
      #                                               #
      #                     Misc                      #
      #                                               #
      #################################################

      - type: grid
        title: 'Misc'
        view_layout:
          grid-area: misc
        columns: 2
        cards:

          - type: custom:button-card
            entity: sensor.washer
            name: Washer
            tap_action:
              !include popup/laundry_status.yaml
            hold_action:
              action: none
            template:
              - laundry
              - icon_washer
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    entity.attributes.remain_time;
                ]]]

          - type: custom:button-card
            entity: sensor.dryer
            name: Dryer
            tap_action:
              !include popup/laundry_status.yaml
            hold_action:
              action: none
            template:
              - laundry
              - icon_dryer
            variables:
              circle_input: >
                [[[
                  return entity === undefined ?
                    null :
                    entity.attributes.remain_time;
                ]]]

          - type: custom:button-card
            entity: light.ana_desk_light
            name: Ana Desk
            hold_action:
              action: none
            template:
              - light
              - icon_shade

      #################################################
      #                                               #
      #                    FOOTER                     #
      #                                               #
      #################################################

      - type: horizontal-stack
        view_layout:
          grid-area: footer
        cards:

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:docker"></ha-icon> Docker
            tap_action:
              !include popup/footer/docker.yaml
            variables:
              notify: >
                [[[
                  let internet = states['binary_sensor.template_udm_internet'];
                  if (internet) {
                    return internet.state === 'off';
                  }
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:heart-box-outline"></ha-icon> Sys Health
            tap_action:
              !include popup/footer/alerts.yaml
            variables:
              notify: >
                [[[
                  let alert1 = states['sensor.template_oakland_alert_1'];
                  let alert2 = states['sensor.template_oakland_alert_2'];
                  let missing = states['sensor.template_unavailable_entities'];
                  let tmr_alert = states['timer.startup_missing_delay'];
                  let number_of_events = 0;

                  if (alert1.state === 'on') {
                    number_of_events += 1;
                  }

                  if (alert2.state === 'on') {
                    number_of_events += 1;
                  }

                  if (missing && Number.isInteger(parseInt(missing.state)) && tmr_alert.state !== 'active') {
                    return (parseInt(missing.state) + number_of_events);
                  }
                  else {
                    return number_of_events;
                  }
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:arrow-up-bold-circle-outline"></ha-icon> Updater
            tap_action:
              !include popup/footer/updater.yaml
            variables:
              notify: >
                [[[
                  let hass_installed = hass.config.version,
                    hass_version_latest = states['sensor.hass_version_latest'],
                    hass_version_latest_beta = states['sensor.hass_version_latest_beta'],
                    hacs = states['sensor.hacs'];
                  if (hass_version_latest && hass_version_latest.state.includes('.')
                    && hass_version_latest_beta && hass_version_latest_beta.state.includes('.')
                    && hacs && Number.isInteger(parseInt(hacs.state))) {
                    let hass_latest = hass_installed.includes('b')
                        ? hass_version_latest_beta.state
                        : hass_version_latest.state,
                      hass_count = hass_installed !== hass_latest ? 1 : 0;
                    return hass_count + parseInt(hacs.state);
                  }
                  return 0;
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:router-wireless"></ha-icon> Router
            tap_action:
              !include popup/footer/router.yaml
            variables:
              notify: >
                [[[
                  let internet = states['binary_sensor.template_udm_internet'],
                    upgradable = states['binary_sensor.template_udm_upgradable'];
                  if (internet && upgradable) {
                    return upgradable.state === 'on'
                      ? 1
                      : internet.state === 'off';
                  }
                  return 0;
                ]]]
            template: footer