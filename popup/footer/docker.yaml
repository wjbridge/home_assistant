action: fire-dom-event
browser_mod:
  command: popup
  title: Information
  style:
    .: |
      :host {
          --ha-card-border-radius: 0;
        }
      @media screen and (min-width: 1200px) {
        :host .content {
          width: calc(385px + 385px + 385px);
          max-width: 90vw;
        }
      }
    layout-card:
      $grid-layout:
        $:
          hui-entities-card:
            $: |
              .card-content {
                padding: var(--card-content-padding);
                padding-bottom: 0.8em;
              }
              ha-card {
                border-right: 1.5px solid rgba(0, 0, 0, 0.2);
                border-radius: 0;
                transition: none;
                letter-spacing: normal;
              }
              /* portrait */
              @media screen and (max-width: 1200px) {
                ha-card {
                  border-right: none;
                  border-bottom: 1.5px solid rgba(0, 0, 0, 0.2);
                }
              }
            $hui-horizontal-stack-card:
              $: |
                #root {
                  justify-content: space-evenly;
                  margin-top: 1.7em;
                  max-width: 82vw; /* iphonex */
                }
  card:
    type: custom:layout-card
    layout_type: custom:grid-layout
    layout:
      margin: 0
      grid-template-columns: 385px 385px 385px
      grid-template-rows: 1fr
      grid-template-areas: |
        "hass sensor docker"
      mediaquery:
        #portrait
        "(max-width: 1200px)":
          grid-template-columns: 1fr
          grid-template-rows: repeat(3, 1fr)
          grid-template-areas: |
            "hass"
            "sensor"
            "docker"
    cards:

      #################################################
      #                                               #
      #                HOME ASSISTANT                 #
      #                                               #
      #################################################

      - type: entities
        view_layout:
          grid-area: hass
        title: Home Assistant
        show_header_toggle: false
        card_mod:
          class: header
        entities:
          - entity: sensor.hass_version_installed

          - entity: sensor.hass_version_latest

          - entity: sensor.home_assistant_log_size

          - entity: sensor.home_assistant_v2_db_size

          - type: attribute
            entity: sensor.docker_homeassistant
            attribute: uptime
            format: relative
            name: Last Restart
            icon: mdi:update

          - type: attribute
            entity: sensor.docker_homeassistant
            attribute: health
            secondary_info: last-changed

          - type: custom:bar-card
            width: 55%
            height: 2em
            decimal: 0
            unit_of_measurement: '%'
            positions: &bar_card_positions
              icon: outside
              indicator: 'off'
              name: outside
            severity: &bar_card_severity
              - color: '#6d2525'
                from: 85
                to: 999
            entity_row: true
            entities:

              - entity: sensor.docker_homeassistant
                attribute: cpu_percentage
                name: Processor
                icon: mdi:chip

              - entity: sensor.docker_homeassistant
                attribute: memory_percentage
                name: Memory
                icon: mdi:memory

          - type: custom:hui-horizontal-stack-card
            cards:
              - type: custom:button-card
                name: Restart HA
                icon: mdi:reload
                tap_action:
                  services: |
                    [[[
                      return `[[[
                        hass.callService('browser_mod', 'toast', {
                          message: 'Restart Home Assistant...'
                        });
                        hass.callService('homeassistant', 'restart');
                      ]]]`
                    ]]]
                template: icon_name

              - type: custom:button-card
                name: Refresh Theme
                icon: mdi:reload
                tap_action:
                  services: |
                    [[[
                      return `[[[
                        hass.callService('browser_mod', 'toast', {
                          message: 'Reload theme...'
                        });
                        hass.callService('homeassistant', 'reload_core_config');
                        hass.callService('frontend', 'reload_themes');
                      ]]]`
                    ]]]
                template: icon_name

      #################################################
      #                                               #
      #                   SENSOR                      #
      #                                               #
      #################################################

      - type: entities
        view_layout:
          grid-area: sensor
        title: Sensors
        state_color: true
        show_header_toggle: false
        card_mod:
          class: header
        entities:
          - entity: sensor.front_door_battery
            secondary_info: >
              {% if is_state('binary_sensor.front_door_open', 'off') %}
                Closed
              {% else %}
                Open
              {% endif %}

            style: &style_bat |
              :host {
                --paper-item-icon-color: {{ '#9c2525' if states(config.entity) | float(default=0) < 50 else '#24ce14' }};
                }

          - entity: sensor.office_window_battery
            secondary_info: >
              {% if is_state_attr('sensor.office_window_battery', 'contact', true) %}
                Closed
              {% else %}
                Open
              {% endif %}

            style: *style_bat

          - entity: sensor.dining_room_window_battery
            secondary_info: >
              {% if is_state_attr('sensor.dining_room_window_battery', 'contact', true) %}
                Closed
              {% else %}
                Open
              {% endif %}
            style: *style_bat

          - entity: sensor.master_bedroom_window_battery
            secondary_info: >
              {% if is_state_attr('sensor.master_bedroom_window_battery', 'contact', true) %}
                Closed
              {% else %}
                Open
              {% endif %}
            style: *style_bat

          - entity: sensor.garage_battery
            secondary_info: >
              {% if is_state_attr('sensor.garage_battery', 'contact', true) %}
                Closed
              {% else %}
                Open
              {% endif %}
            style: *style_bat

          - entity: sensor.garage_temp_battery
            style: *style_bat

          - type: custom:hui-horizontal-stack-card
            cards:
              - type: custom:button-card
                name: Restart VPN
                icon: mdi:reload
                tap_action:
                  action: call-service
                  service: script.turn_on
                  service_data:
                    entity_id: script.docker_vpn_restart
                template: icon_name

              - type: custom:button-card
                name: Restart Plex
                icon: mdi:reload
                tap_action:
                  services: |
                    [[[
                      return `[[[
                        hass.callService('browser_mod', 'toast', {
                          message: 'Restart Plex Container...'
                        });
                        hass.callService('monitor_docker', 'restart', {
                          name: 'plex'
                        });
                      ]]]`
                    ]]]
                template: icon_name

      #################################################
      #                                               #
      #                   DOCKER                      #
      #                                               #
      #################################################

      - type: entities
        view_layout:
          grid-area: docker
        title: Docker Status
        show_header_toggle: false
        card_mod:
          class: header
          style:
            .: |
              ha-card {
                animation: none !important;
                margin: 0px !important;
              }
            mini-graph-card:
              $: |
                ha-card {
                  padding: 0px !important;
                }
            hui-horizontal-stack-card:
              $:
                .: |
                  #root {
                    margin-top: 1em;
                    margin-right: 1.5em;
                  }
                  #root > * {
                    flex: none !important;
                  }
                hui-entities-card:
                  $:
                    .: |
                      #states {
                        padding: 0;
                      }
                    hui-sensor-entity-row:
                      $hui-generic-entity-row$: |
                        .info {
                          margin: 0 8px 0 8px !important;
                        }
        entities:
          - entity: sensor.docker_version

          - entity: sensor.docker_containers_total
            name: Containers Total

          - entity: sensor.docker_containers_running
            name: Containers Running

          - entity: sensor.docker_containers_paused
            name: Containers Paused

          - entity: sensor.docker_containers_stopped
            name: Containers Stopped

          - type: attribute
            entity: sensor.docker_vpn
            attribute: health
            secondary_info: last-changed

          - type: custom:bar-card
            width: 55%
            height: 2em
            decimal: 0
            unit_of_measurement: '%'
            positions: *bar_card_positions
            severity: *bar_card_severity
            entity_row: true
            entities:

              - entity: sensor.docker_1cpu
                tap_action:
                  action: call-service
                  service: homeassistant.update_entity
                  service_data:
                    entity_id: sensor.docker_1cpu

              - entity: sensor.docker_memory_percent
                tap_action:
                  action: call-service
                  service: homeassistant.update_entity
                  service_data:
                    entity_id: sensor.docker_memory_percent
