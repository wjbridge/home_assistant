action: fire-dom-event
browser_mod:
  command: popup
  title: Active Alerts
  style:
  hui-vertical-stack-card:
    $: |
      hui-horizontal-stack-card {
        padding: 0em 2em 2.3em 2em;
      }
    $hui-horizontal-stack-card$: |
      #root {
        justify-content: space-evenly;
      }
  card:
    type: vertical-stack
    cards:
      - type: entities
        state_color: true
        card_mod:
          class: content
        entities:

          ### Weather Alert 1
          - type: custom:button-card
            entity: sensor.template_oakland_alert_1
            state_display: |
              [[[
                if (entity && entity.state === 'on') {
                  let alert_event = entity.attributes.alert_event;

                  let display_title = ((alert_event.toLowerCase().includes('special')) || (alert_event.toLowerCase().includes('warning'))) ?
                    entity.attributes.display_message :
                    entity.attributes.display_title;

                  let font_color = ``;
                  if (alert_event.toLowerCase().includes('watch')) {
                    font_color = `#f7e304`;
                  } else if (alert_event.toLowerCase().includes('warning')) {
                    font_color = `#ef0e0e`;
                  } else {
                    font_color = `#b133e8`;
                  }

                  return `
                    <font color=${font_color}><ha-icon icon="mdi:weather-lightning"></ha-icon></font> <span class="title"> ${alert_event}</span><br>
                    <p class="subtitle">${display_title}</p>
                  `;
                } else {
                  return `
                    <font color=#9da0a2><ha-icon icon="mdi:check-bold"></ha-icon></font> <span class="title">Weather Events #1</span><br>
                    <p class="subtitle">No Active Weather Events</p>
                  `;
                }
              ]]]
            template: updater

            ### Weather Alert 2
          - type: custom:button-card
            entity: sensor.template_oakland_alert_2
            state_display: |
              [[[
                if (entity && entity.state === 'on') {
                  let alert_event = entity.attributes.alert_event;

                  let display_title = ((alert_event.toLowerCase().includes('special')) || (alert_event.toLowerCase().includes('warning'))) ?
                    entity.attributes.display_message :
                    entity.attributes.display_title;

                  let font_color = ``;
                  if (alert_event.toLowerCase().includes('watch')) {
                    font_color = `#f7e304`;
                  } else if (alert_event.toLowerCase().includes('warning')) {
                    font_color = `#ef0e0e`;
                  } else {
                    font_color = `#b133e8`;
                  }

                  return `
                    <font color=${font_color}><ha-icon icon="mdi:weather-lightning"></ha-icon></font> <span class="title"> ${alert_event}</span><br>
                    <p class="subtitle">${display_title}</p>
                  `;
                } else {
                  return `
                    <font color=#9da0a2><ha-icon icon="mdi:check-bold"></ha-icon></font> <span class="title">Weather Events #2</span><br>
                    <p class="subtitle">No Active Weather Events</p>
                  `;
                }
              ]]]
            template: updater

          ### Missing Entities
          - type: custom:button-card
            entity: sensor.template_unavailable_entities
            state_display: |
              [[[
                if (entity && entity.state !== '0' && entity.state !== 'unknown') {
                  let output = ``;
                  var missing = entity.attributes.entities;
                  let count = missing.length;

                  for (var i = 0; i < missing.length; i++) {
                    let entity_icon = states[missing[i]].attributes.icon;
                    output += `<li><ha-icon icon="${entity_icon}"></ha-icon>\u279e ${missing[i]}</li>`;
                  }

                  let subtitle = `Total Entities \u279e ${count}`;

                  return `
                    <font color=#3182b7><ha-icon icon="mdi:home-alert"></ha-icon></font> <span class="title">Missing Entities</span><br>
                    <p class="subtitle">${subtitle}</p>
                    <ul>${output}</ul>
                  `;
                } else {
                  return `
                    <font color=#9da0a2><ha-icon icon="mdi:check-bold"></ha-icon></font> <span class="title">Missing Entities</span><br>
                    <p class="subtitle">No Missing Entities</p>
                  `;
                }
              ]]]
            template: updater