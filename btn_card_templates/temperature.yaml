  # !toggle word-wrap

  #################################################
  #                                               #
  #                     TEMP                      #
  #                                               #
  #################################################

  temperature:
    variables:
      attribute_one: ''
      attribute_two: ''
    aspect_ratio: 1/1
    show_icon: false
    show_entity_picture: true
    show_name: true
    show_state: false
    show_label: true
    tap_action:
      action: more-info
    styles:
      grid:
        - grid-template-areas: |
            "n"
            "temp"
            "i"
            "s"
            "l"
        - grid-template-columns: 1fr
        - grid-template-rows: min-content repeat(2, 1fr) repeat(2, min-content)
        - gap: 0%
      card:
        - color: > #rgba(157, 160, 162, 1) #rgba(84, 85, 85, 1) #rgba(85, 86, 86, 1)
            [[[
              if (states['sun.sun'].state == 'below_horizon'){
                return 'rgba(157, 160, 162, 1)';
              } else
                return 'rgba(84, 85, 85, 1)';
            ]]]  
        - background: > # else linear-gradient(to top, rgba(123,168,197,0.8) 0%, rgba(61,132,176,0.8) 100%)
            [[[
              if (states['sun.sun'].state == 'below_horizon'){
                return 'linear-gradient(to top, rgba(53,59,83,0.8) 0%, rgba(10,14,34,0.8) 100%)';
              } else
                return 'linear-gradient(to top, rgb(123 168 197) 0%, #b0c5d3 100%)';
            ]]]
          # return 'linear-gradient(to top, rgb(123 168 197) 0%, #b0c5d3 100%)'; --- rgb(213, 215, 216)
      name:
        - place-self: start
        - text-transform: uppercase
        - font-weight: 400
      img_cell:
        - justify-content: start
      icon:
        - width: 37%
      label:
        - place-self: start
        - margin-left: -5px
      custom_fields:
        temp:
          - place-self: start
    label: >
      [[[
            let device_type_attribute_one = states[variables.attribute_one].attributes.device_class;

            var mdi_icon_one = device_type_attribute_one === 'humidity'
              ? 'mdi:water'
              : device_type_attribute_one === 'battery'
                ? 'mdi:battery-80'
                : 'mdi:arrow-up-thin';

            var suffix_icon_one = device_type_attribute_one === 'humidity'
              ? '%'
              : device_type_attribute_one === 'battery'
                ? '%'
                : '째';

          let device_type_attribute_two = states[variables.attribute_two].attributes.device_class;

          var mdi_icon_two = device_type_attribute_two === 'humidity'
              ? 'mdi:water'
              : device_type_attribute_two === 'battery'
                ? 'mdi:battery-80'
                : device_type_attribute_two === 'pressure'
                  ? 'mdi:arrow-collapse'
                  : 'mdi:arrow-down-thin';

          let suffix_icon_two = device_type_attribute_two === 'humidity'
              ? '%'
              : device_type_attribute_two === 'battery'
                ? '%'
                : device_type_attribute_two === 'pressure'
                  ? ''
                  : '째';

        return `
            <ha-icon icon="${mdi_icon_one}" style="width: 0.9em; height: 1.3em; margin-right: -0.09em;"></ha-icon>
            <span> ${Math.round(states[variables.attribute_one].state)}${suffix_icon_one}</span>
            <ha-icon icon="${mdi_icon_two}" style="width: 0.9em; height: 1.3em; margin-right: -0.09em;"></ha-icon>
            <span> ${Math.round(states[variables.attribute_two].state)}${suffix_icon_two}</span>
          `
      ]]]
    custom_fields:
      temp: >
        [[[
            var temp = entity.attributes.device_class;
            if (temp) {
              return Math.round(entity.state) + "째";
            } else {
              return Math.round(entity.attributes.temperature) + "째";
            }
        ]]]
    entity_picture: |
      [[[
        var temp = entity.attributes.temperature;

        if (temp) {
          if ((entity.state == 'sunny') && (states['sun.sun'].state == 'above_horizon')) {
            return "/local/weather-icons/clear-day.svg";
          }

          if ((entity.state == 'sunny') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon')) {
            return "/local/weather-icons/clear-night.svg";
          }

          if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon')) {
            return "/local/weather-icons/cloudy-day.svg";
          }

          if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon')) {
            return "/local/weather-icons/cloudy-day.svg";
          }

          if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'below_horizon')) {
            return "/local/weather-icons/cloudy-night.svg";
          }

          if (entity.state == 'rainy') {
            return "/local/weather-icons/rain.svg";
          }

          if (entity.state == 'sleet') {
            return "/local/weather-icons/sleet.svg";
          }

          if (entity.state == 'snow') {
            return "/local/weather-icons/snowy.svg";
          }

          if (entity.state == 'cloudy') {
            return "/local/weather-icons/cloudy.svg";
          }
        }
      ]]]
    extra_styles: |
      [[[
        return `
          #name {
            font-size: 0.8vw;
          }
          #temp {
            font-size: 1.8vw;
          }
          #state {
            font-size: 0.8vw;
          }  
          #label {
            font-size: 0.8vw;
          }
          /* portrait */
          @media screen and (max-width: 2000px) {
            #name {
              font-size: 0.7vw !important;
            }
            #temp {
              font-size: 1.8vw !important;
            }
            #state {
              font-size: 0.7vw !important;
            }
            #label {
              font-size: 0.7vw !important;
            }
          }
          /* phone */
          @media screen and (max-width: 800px) {
            #name {
              font-size: 2vw !important;
            }
            #temp {
              font-size: 4.5vw !important;
            }
            #state {
              font-size: 2vw !important;
            }
            #label {
              font-size: 2vw !important;
            }
          }
          @keyframes card_bounce {
            0% {
              transform: scale(1);
            }
            15% {
              transform: scale(0.9);
            }
            25% {
              transform: scale(1);
            }
            30% {
              transform: scale(0.98);
            }
            100% {
              transform: scale(1);
            }
          }
        `
      ]]]