###############################################################################
# New Home Assistant Version
###############################################################################
- id: new_home_assistant_version_alert
  alias: "New Home Assistant Version Alert"
  trigger:
    platform: state
    entity_id: sensor.hass_version_latest

  condition:
    - condition: template
      value_template: "{{ states('sensor.hass_version_latest') != 'unavailable' }}"

  action:
    service: notify.groot_automation
    data_template:
      title: "<b>Info</b>: New Home Assistant Version -> {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
      message: "Version <a href=\"https://github.com/home-assistant/core/releases/tag/{{states('sensor.hass_version_latest')}}\">{{states('sensor.hass_version_latest')}}</a> is available!"

###############################################################################
# New Software Program Version
###############################################################################
- id: new_sw_release_alert
  alias: "New Software Release Alert"
  trigger:
    platform: state
    entity_id:
      - sensor.papermerge_release_notes
      - sensor.fireflyiii_release_notes
      - sensor.photoprism_release_notes
      - sensor.adguardhome_release_notes
      - sensor.homeassistant_desktop_release_notes
      - sensor.homer_release_notes

  condition:
    - condition: template
      value_template: "{{ states(trigger.entity_id) != 'unavailable' }}"
    - condition: template
      value_template: "{{ trigger.from_state != none }}"
    - condition: template
      value_template: "{{ trigger.platform == 'state' and trigger.to_state.state  and trigger.from_state.state is not none and states(trigger.entity_id) != none}}"

  action:
    service: notify.groot_automation
    data_template:
      title: "<b>Info</b>: [{{ trigger.from_state.name }}] -> {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
      message: "<a href=\"{{state_attr(trigger.entity_id, 'html_url') }}\">{{state_attr(trigger.entity_id, 'tag_name')}}</a> is available!"

###############################################################################
# New Device on Network
###############################################################################
- id: notify_if_new_devices_alert
  alias: Notify If New Devices Alert
  trigger:
    platform: event
    event_type: device_tracker_new_device

  action:
    service: notify.groot_automation
    data_template:
      title: "<b>Info</b>: New Device Detected"
      message: 'New device: {{ trigger.event.data.entity_id }}'

###############################################################################
# Windows Left Open, Rain Coming, or thermostat actived
###############################################################################
- id: window_left_open_alert
  alias: Window Left Open Alert
  trigger:
    - platform: time
      id: 'close_house_down'
      at: '21:00:00'

    - platform: numeric_state
      id: 'dark_sky_rain_coming'
      entity_id: sensor.dark_sky_precip_probability_1h
      above: 60

    - platform: state
      id: 'climate_to_cool'
      entity_id: climate.thermostat
      to: 'cool'
      for:
        hours: 0
        minutes: 5
        seconds: 0

    - platform: state
      id: 'climate_to_heat'
      entity_id: climate.thermostat
      to: 'heat'
      for:
        hours: 0
        minutes: 5
        seconds: 0

  condition:
    - condition: state
      entity_id: group.contact_sensors
      state: 'on'

  action:
    - choose:
          # IF thermostat is in cool or heat mode
          - conditions:
              - condition: or
                conditions:
                  - condition: trigger
                    id: 'climate_to_heat'
                  - condition: trigger
                    id: 'climate_to_cool'
            sequence:
              - service: notify.groot_automation
                data_template:
                  title: >
                    {{'\u1F6A8'}} Alert Thermostat Active {{'\u1F6A8'}}: Window / Door Open
                  message: >
                    {% set open_windows = states | selectattr('entity_id', 'in', state_attr('group.contact_sensors','entity_id')) | selectattr('state','in',['on','open']) | map(attribute='name') | list %}
                    {% if open_windows | length == 1 %}
                      The {{ open_windows[0] }} is open! Thermostat is currently in {{ states('sensor.climate.thermostat') }} mode.
                    {% else %}
                      The {{ open_windows[:-1] | join(' door, ') }}{{' door,' if open_windows | length > 2 else ' door'}} and {{ open_windows[-1]}} are open. Thermostat is currently in {{ states('sensor.climate.thermostat') }} mode.
                    {% endif %}

          # ELIF rain is coming
          - conditions:
              - condition: trigger
                id: 'dark_sky_rain_coming'
            sequence:
              - service: notify.groot_automation
                data_template:
                  title: >
                    {{'\u1F327\uFE0F'}} Alert Rain Is Coming {{'\u1F327\uFE0F'}}: Window / Door Open'
                  message: >
                    {% set open_windows = states | selectattr('entity_id', 'in', state_attr('group.contact_sensors','entity_id')) | selectattr('state','in',['on','open']) | map(attribute='name') | list %}
                    {% if open_windows | length == 1 %}
                      The {{ open_windows[0] }} is open! Precipitation probability is at {{ states('sensor.dark_sky_precip_probability_1h') }}.
                    {% else %}
                      The {{ open_windows[:-1] | join(' door, ') }}{{' door,' if open_windows | length > 2 else ' door'}} and {{ open_windows[-1]}} are open. Precipitation probability is at {{ states('sensor.dark_sky_precip_probability_1h') }}.
                    {% endif %}
            
          # ELIF house locked up for night
          - conditions:
              - condition: trigger
                id: 'close_house_down'
            sequence:
              - service: notify.groot_automation
                data_template:
                  title: >
                    {{'\u1F6A8'}} Alert {{'\u1F6A8'}}: Window / Door Open
                  message: >
                    {% set open_windows = states | selectattr('entity_id', 'in', state_attr('group.contact_sensors','entity_id')) | selectattr('state','in',['on','open']) | map(attribute='name') | list %}
                    {% if open_windows | length == 1 %}
                      The {{ open_windows[0] }} is left open at night!
                    {% else %}
                      The {{ open_windows[:-1] | join(' door, ') }}{{' door,' if open_windows | length > 2 else ' door'}} and {{ open_windows[-1]}} are open at night.
                    {% endif %}


###############################################################################
# Battery Low
###############################################################################
- id: battery_low_alert
  alias: 'Battery Low Alert'
  trigger:
    platform: numeric_state
    entity_id:
      - group.sensor_batteries
    above: 0
    below: 40
    for:
      minutes: 15

  action:
    - service: notify.groot_automation
      data_template:
        title: '<b>Alert</b>: Low Battery'
        message: "Battery Report: {{ trigger.to_state.state }} \n The battery for {{ trigger.to_state.name }} is below 20 percent"