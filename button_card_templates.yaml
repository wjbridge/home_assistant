  # !toggle word-wrap

  #################################################
  #                                               #
  #                     BASE                      #
  #                                               #
  #################################################

  base:
    variables:
      state: >
        [[[ return entity === undefined || entity.state; ]]]
      timeout: >
        [[[ return entity === undefined || Date.now() - Date.parse(entity.last_changed); ]]]
      light_color: >
        [[[ return entity === undefined || entity.state === 'unavailable' ? 'var(--state-icon-color)' : 'var(--button-card-light-color-no-temperature)'; ]]]
    aspect_ratio: 1/1
    show_state: true
    show_icon: false
    state_display: >
      [[[ if (variables.state === true) return 'Unkown'; ]]]
    tap_action:
      animation_card: |
        [[[
          const animation_speed_ms = 900;
          const animation = `card_bounce ${animation_speed_ms}ms cubic-bezier(0.22, 1, 0.36, 1)`;
          this.shadowRoot.getElementById("card").style.animation = animation;
          window.setTimeout(() => {
            this.shadowRoot.getElementById("card").style.animation = "none";
          }, animation_speed_ms)
        ]]]
      action: toggle
      haptic: medium
    styles:
      grid:
        - grid-template-areas: |
            "icon  circle"
            "n     n"
            "s     s"
        - grid-template-columns: repeat(2, 1fr)
        - grid-template-rows: auto repeat(2, min-content)
        - gap: 2%
        - align-items: start
      name:
        - justify-self: start
        - line-height: 115%
      state:
        - justify-self: start
        - line-height: 115%
      card:
        - font-family: Sf Display
        - border-radius: var(--custom-button-card-border-radius)
        - -webkit-tap-highlight-color: rgba(0,0,0,0)
        - transition: none
        - padding: 10%
        - --mdc-ripple-color: >
            [[[
              return (variables.state === 'on' || variables.state === 'home' || variables.state === 'cool') ?
                'rgb(0, 0, 0)' :
                'rgba(255, 255, 255, 0.3)';
            ]]]
        - color: >
            [[[
              return (variables.state === 'on' || variables.state === 'home' || variables.state === 'cool') ?
                'rgba(0, 0, 0, 0.6)' :
                'rgba(255, 255, 255, 0.3)';
            ]]]
        - background-color: >
            [[[
              return (variables.state === 'on' || variables.state === 'home' || variables.state === 'cool') ?
                'rgba(255, 255, 255, 0.8)' :
                'rgba(115, 115, 115, 0.2)';
            ]]]
    extra_styles: |
      #name, #state {
        font-size: 1.34vw;
        letter-spacing: 0.05vw;
      }
      /* portrait */
      @media screen and (max-width: 1200px) {
        #name, #state {
          font-size: 2vw;
          letter-spacing: 0.05vw;
        }
      }
      /* phone */
      @media screen and (max-width: 800px) {
        #name, #state {
          font-size: 3.1vw;
          letter-spacing: 0.12vw;
        }
      }
      @keyframes card_bounce {
        0% {
          transform: scale(1);
        }
        15% {
          transform: scale(0.9);
        }
        25% {
          transform: scale(1);
        }
        30% {
          transform: scale(0.98);
        }
        100% {
          transform: scale(1);
        }
      }

  #################################################
  #                                               #
  #                    CIRCLE                     #
  #                                               #
  #################################################

  circle:
    custom_fields:
      circle: >
        [[[
          if (variables.state === 'on') {
            const input = variables.circle_input;
            const radius = 20.5;
            const circumference = radius * 2 * Math.PI;
            return `
              <svg viewBox="0 0 50 50">
                <style>
                  circle {
                    transform: rotate(-90deg);
                    transform-origin: 50% 50%;
                    stroke-dasharray: ${circumference};
                    stroke-dashoffset: ${circumference - input / 100 * circumference};
                  }
                  tspan {
                    font-size: 10px;
                  }
                </style>
                <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
                <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
              </svg>
            `;
          }
        ]]]
    styles:
      custom_fields:
        circle: &person
          - display: initial
          - width: 90%
          - letter-spacing: 0.03vw
          - margin: -6% -6% 0 0
          - justify-self: end
          - opacity: 1

  #################################################
  #                                               #
  #                    LOADER                     #
  #                                               #
  #################################################

  loader:
    custom_fields:
      loader: >
        <img src="/local/loader.svg" width="100%">
    tap_action:
      loader: >
        [[[
          if (entity !== undefined) {
            let elt = this.shadowRoot;
            const loader = (id, style, timeout) => {
              if (elt.getElementById(id)) {
                elt.getElementById(id).style.display = style;
                window.setTimeout(() => {
                  elt.getElementById(id).style.display = timeout;
                }, 20000)
              }
            };
            loader('circle', 'none', 'initial');
            loader('loader', 'initial', 'none');
          }
        ]]]
    styles:
      custom_fields:
        loader:
          - display: none
          - top: 3%
          - left: 60%
          - width: 37%
          - position: absolute
          - opacity: 0.5
          - filter: >
              [[[ return variables.state === 'off' ? 'invert(1)' : 'none'; ]]]

  #################################################
  #                                               #
  #                    PERSON                     #
  #                                               #
  #################################################

  person:
    template:
      - base
      - circle
    state_display: >
      [[[ return variables.state === 'home' ? 'Yes' : 'No'; ]]]
    triggers_update: sensor.time
    styles:
      custom_fields:
        icon:
          - clip-path: circle()
          - width: 79%
          - pointer-events: none
          - display: flex
    custom_fields:
      icon: >
        [[[ return entity === undefined || `<img src="${states[entity.entity_id].attributes.entity_picture}" width="100%">`; ]]]
      circle: >
        [[[
          const time = c => {
            const s = (c / 1000);
            const m = (c / (1000 * 60));
            const h = (c / (1000 * 60 * 60));
            const d = (c / (1000 * 60 * 60 * 24));
            if (s < 60) {
              return parseInt(s) + 's';
            } else if (m < 60) {
              return parseInt(m) + 'm';
            } else if (h < 24) {
              return parseInt(h) + 'h';
            } else {
              return parseInt(d) + 'd';
            }
          };
          let last_changed = entity === undefined || time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
          const stroke_color = variables.state === 'home' ? '#b2b2b2' : '#313638';
          const fill_color = variables.state === 'home' ? 'none' : '#FFFFFF08';
          return `
            <svg viewBox="0 0 50 50">
              <style>
                circle {
                  transform: none;
                  transform-origin: none;
                  stroke-dasharray: none;
                  stroke-dashoffset: none;
                }
              </style>
              <circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
              <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${last_changed}</text>
            </svg>
          `;
        ]]]

  #################################################
  #                                               #
  #                  BASE MEDIA                   #
  #                                               #
  #################################################

  base_media:
    tap_action:
      action: >
        [[[
          return !(variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby') ? 'call-service' : 'none';
        ]]]
      service: media_player.media_play_pause
      service_data:
        entity_id: >
          [[[ return entity === undefined || entity.entity_id; ]]]
    double_tap_action:
      action: call-service
      service: >
        [[[ return variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ? 'media_player.turn_on' : 'media_player.turn_off'; ]]]
      service_data:
        entity_id: >
          [[[ return entity === undefined || entity.entity_id; ]]]
    styles:
      card:
        - color: >
            [[[
              var entity_picture = entity === undefined || entity.attributes.entity_picture;
              if (variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ||
                variables.state === 'unknown' || variables.state === 'unavailable' || entity === undefined) {
                return 'rgba(255, 255, 255, 0.3)';
              }
              return (variables.state != 'off' && variables.state != 'idle' && variables.state != 'standby') && (entity_picture == null) ? 'rgba(0, 0, 0, 0.6)' : '#efefef';
            ]]]
        - text-shadow: >
            [[[
              const entity_picture = entity === undefined || entity.attributes.entity_picture;
              return entity_picture == null ? 'none' : '1px 1px 5px rgba(18, 22, 23, 0.9)';
            ]]]

  #################################################
  #                                               #
  #                     MEDIA                     #
  #                                               #
  #################################################

  media:
    template:
      - base
      - base_media
    styles:
      custom_fields:
        icon:
          - width: 70%
          - fill: '#9da0a2'
          - opacity: >
              [[[
                const entity_picture = entity === undefined || entity.attributes.entity_picture;
                return entity_picture == null ? 1 : 0;
              ]]]
      card:
        - background-color: none
        - background-size: cover
        - background-image: >
            [[[
              const entity_picture = entity === undefined || entity.attributes.entity_picture;
              if (variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ||
                variables.state === 'unknown' || variables.state === 'unavailable' || entity === undefined) {
                return 'linear-gradient(0deg, rgba(115, 115, 115, 0.2) 0%, rgba(115, 115, 115, 0.2) 100%)';
              }
              return (variables.state != 'off' && variables.state != 'idle' && variables.state != 'standby') && (entity_picture == null) ? 
                'linear-gradient(0deg, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.8) 100%)' : 
                'linear-gradient(0deg, rgba(0,0,0,.8) 0%, rgba(0,0,0,0) 100%), url(' + entity_picture + ')';
            ]]]

  #################################################
  #                                               #
  #               CONDITIONAL MEDIA               #
  #                                               #
  #################################################

  conditional_media:
    template:
      - base
      - base_media
    state_display: >
      [[[
        if (entity.attributes.media_title === 'Nothing playing' || entity.attributes.media_title === 'No title' && variables.state === 'paused') {
          return 'Nothing is played';
        }
        return entity.attributes.media_title === 'No title' && variables.state === 'playing' ? 'Nothing is played' : entity.attributes.media_title;
      ]]]
    custom_fields:
      blur: >
        [[[
          if (entity.attributes.entity_picture !== undefined) return '<div></div>';
        ]]]
      overlay: >
        [[[ 
          if (entity.attributes.entity_picture === undefined && entity.state !== 'idle' && entity.state !== 'unavailable') return '<div></div>';
        ]]]
      media_image: >
        <div></div>
      play_pause: >
        [[[
          const style = `
            <style>
              .scale-up {
                animation: scale-up 0.3s;
                cubic-bezier(.05, .5, .3, 1) 1;
                transform-origin: center center;
              }

              @keyframes scale-up {
                0% {
                  opacity: 0;
                  transform: scale(0);
                }
                100% {
                  opacity: 1;
                  transform: scale(1);
                }
              }
            </style>
          `;
          if (variables.state === 'playing') {
            return `
              <svg viewBox="0 0 166 166">${style}
                <path class="scale-up" d="M0 0h59.9v166H0zm106.1 0H166v166h-59.9z"/>
              </svg>
            `;
          }
          if (variables.state === 'paused') {
            return `
              <svg viewBox="0 0 166 166">${style}
                <path class="scale-up" d="M0 0l166 83L0 166z"/>
              </svg>
            `;
          }
        ]]]
    styles:
      name:
        - z-index: 3
        - margin-bottom: -1%
      state:
        - z-index: 3
      card:
        - padding: 5%
        - border-radius: calc(var(--custom-button-card-border-radius) / 2)
        - backdrop-filter: blur(0) #fix chrome bug
      custom_fields:
        blur:
          - z-index: 2
          - top: 75.5%
          - left: 0%
          - width: 100%
          - height: 26%
          - position: absolute
          - background-color: rgba(0, 0, 0, 0.2)
          - backdrop-filter: blur(0.4em)
          - -webkit-backdrop-filter: blur(0.4em)
        overlay:
          - z-index: 2
          - opacity: 1
          - top: 75.5%
          - left: 0%
          - width: 100%
          - height: 26%
          - position: absolute
          - background-color: rgba(255, 255, 255, 0.8)
        media_image:
          - z-index: 1
          - top: 0
          - left: 0
          - width: 100%
          - height: 100%
          - position: absolute
          - background-size: cover
          - background-image: >
              [[[ 
                return entity.attributes.entity_picture === undefined ? 'none' : `url(${entity.attributes.entity_picture})`;
              ]]]
        play_pause:
          - z-index: 3
          - top: 0
          - right: 0
          - bottom: 0
          - left: 0
          - margin: auto
          - width: 21%
          - height: 21%
          - position: absolute
          - fill: '#dedede'
          - filter: >
              [[[
                const entity_picture = entity === undefined || entity.attributes.entity_picture;
                return entity_picture == null ? 'none' : 'drop-shadow(0 0 1.3vw rgba(0,0,0,0.7))';
              ]]]
        icon:
          - z-index: 3
          - width: 29%
          - fill: >
              [[[ 
                return variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ||
                variables.state === 'unknown' || variables.state === 'unavailable' || entity === undefined ? 
                  '#9da0a2' : 
                  'rgba(255, 255, 255, 0.8)';
              ]]]

  #################################################
  #                                               #
  #              RECENTLY DOWNLOADED              #
  #                                               #
  #################################################

  recently_downloaded:
    name: >
      [[[
        const num = variables.download_index;
        return `Last Downloaded #${num}`
      ]]]
    state_display: >
      [[[
        if (entity != undefined) {
          const num = variables.download_index;
          const data = states[entity.entity_id].attributes.data;
          const number = data[num].number == undefined ? '(' + data[1].aired.split('-')[0] + ')' : data[num].number;
          return `${data[num].title} ${number}`;

          return `${data.title} ${number}`;
        }
        return 'Unknown';
      ]]]
    custom_fields:
      blur: >
        [[[ return entity === undefined || '<div></div>'; ]]]
    styles:
      custom_fields:
        media_image:
          - background-position: center center
          - background-image: >
              [[[ 
                const num = variables.download_index;
                return entity === undefined || `url(${states[entity.entity_id].attributes.data[num].fanart})`;
              ]]]
        overlay:
          - display: none
      card:
        - color: >
            [[[ return entity === undefined ? 'rgba(255, 255, 255, 0.3)' : '#efefef'; ]]]
        - text-shadow: >
            [[[ return entity === undefined ? 'none' : '1px 1px 5px rgba(18, 22, 23, 0.9)'; ]]]

  climate:
    state_display: >
      [[[ return variables.state === 'cool' ? 'On' : 'Off'; ]]]
    custom_fields:
      circle: >
        [[[
          const input = variables.circle_input;
          const stroke_color = variables.state === 'cool' ? '#b2b2b2' : '#313638';
          const fill_color = variables.state === 'cool' ? 'none' : '#FFFFFF08';
          return `
            <svg viewBox="0 0 50 50">
              <style>
                circle {
                  transform: none;
                  transform-origin: none;
                  stroke-dasharray: none;
                  stroke-dashoffset: none;
                }
              </style>
              <circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
              <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}<tspan font-size="10">°F</tspan></text>
            </svg>
          `;
        ]]]
    styles:
      custom_fields:
        circle:
          - display: initial
          - width: 90%
          - letter-spacing: 0.03vw
          - margin: -6% -6% 0 0
          - justify-self: end
          - opacity: 1

  #################################################
  #                                               #
  #                 COMPUTER LOCK                 #
  #                                               #
  #################################################

  lock:
    tap_action:
      loader: |
        [[[
          let elt = this.shadowRoot;
          if (states["lock.front_door"].state === "locked") {
            elt.getElementById("lock").classList.add("locked");
            window.setTimeout(() => {
              elt.getElementById("lock").classList.remove("locked");
            }, 1100);
          } else {
            // duplicate of "loader" template
            const loader = (id, style, timeout) => {
              if (elt.getElementById(id)) {
                elt.getElementById(id).style.display = style;
                window.setTimeout(() => {
                  elt.getElementById(id).style.display = timeout;
                }, 20000);
              }
            };
            loader("circle", "none", "initial");
            loader("loader", "initial", "none");
          }
        ]]]
    custom_fields:
      circle: >
        [[[
          const state = null;
          if (states['lock.front_door'].state === 'locked') {
            return `
              <svg viewBox="0 0 50 50">
                <style>
                  @keyframes locked {
                    from,
                    to {
                      transform: translateX(0);
                    }
                    10%,
                    30%,
                    50%,
                    70%,
                    90% {
                      transform: translateX(-8%);
                    }
                    20%,
                    40%,
                    60%,
                    80% {
                      transform: translateX(8%);
                    }
                  }
                  .locked {
                    animation: locked 1.1s;
                  }
                </style>
                <path id="lock" class="${state}" d="M8.2 22.6h2.4v-7.2C10.6 7.5 17.1 1 25 1s14.4 6.4 14.4 14.4v7.2h2.4V49H8.2m26.4-26.4v-7.2c0-5.3-4.3-9.6-9.6-9.6s-9.6 4.3-9.6 9.6v7.2"/>
              </svg>
            `;
          }
        ]]]
    styles:
      custom_fields:
        circle:
          - width: 45%
          - fill: var(--state-icon-color)
          - margin: 0 2% 0 0
          - justify-self: end
          - opacity: 1

  #################################################
  #                                               #
  #                 POPUP BUTTONS                 #
  #                                               #
  #################################################

  icon_name:
    size: 1.4em
    color: '#9da0a2'
    styles:
      grid:
        - grid-template-areas: '"i n"'
        - grid-column-gap: 0.3em
      name:
        - font-size: 1.06em
        - letter-spacing: 0.015em
      card:
        - color: '#9da0a2'
        - border-radius: 0.6em
        - padding: 1em 1.4em 1em 1.2em
        - width: 100%
        - font-size: 1.06em
        - font-weight: 500
        - letter-spacing: 0.015em
        - background: '#FFFFFF10'

  icon_only:
    color: '#9da0a2'
    styles:
      card:
        - color: '#9da0a2'
        - border-radius: 0.6em
        - width: 4em
        - height: 3.7em
        - background: '#FFFFFF10'

  color_light:
    styles:
      card:
        - border-radius: 50%
        - height: 4em
        - width: 4em
        - margin: 4px

  #################################################
  #                                               #
  #                     ICONS                     #
  #                                               #
  #################################################
  icon_ac:
    styles:
      card:
        - --mdc-ripple-color: >
            [[[
              return (variables.state === 'heat_cool' || variables.state === 'cool' || variables.state === 'heat' || variables.state === 'dry' || variables.state === 'fan_only') ?
                'rgb(0, 0, 0)' :
                'rgba(255, 255, 255, 0.3)';
            ]]]
        - color: >
            [[[
              return (variables.state === 'heat_cool' || variables.state === 'cool' || variables.state === 'heat' || variables.state === 'dry' || variables.state === 'fan_only') ?
                'rgba(0, 0, 0, 0.6)' :
                'rgba(255, 255, 255, 0.3)';
            ]]]
        - background-color: >
            [[[
              return (variables.state === 'heat_cool' || variables.state === 'cool' || variables.state === 'heat' || variables.state === 'dry' || variables.state === 'fan_only') ?
                'rgba(255, 255, 255, 0.8)' :
                'rgba(115, 115, 115, 0.2)';
            ]]]
      custom_fields:
        icon:
          - width: 75%
          - margin-left: -3%
          - fill: >
              [[[ return (variables.state === 'heat_cool' || variables.state === 'cool' || variables.state === 'heat' || variables.state === 'dry' || variables.state === 'fan_only') ? '#5daeea' : '#9da0a2'; ]]]
    custom_fields:
      icon: >
        [[[ 
          let path = `
             <path d="M6.59,0.66C8.93,-1.15 11.47,1.06 12.04,4.5C12.47,4.5 12.89,4.62 13.27,4.84C13.79,4.24 14.25,3.42 14.07,2.5C13.65,0.35 16.06,-1.39 18.35,1.58C20.16,3.92 17.95,6.46 14.5,7.03C14.5,7.46 14.39,7.89 14.16,8.27C14.76,8.78 15.58,9.24 16.5,9.06C18.63,8.64 20.38,11.04 17.41,13.34C15.07,15.15 12.53,12.94 11.96,9.5C11.53,9.5 11.11,9.37 10.74,9.15C10.22,9.75 9.75,10.58 9.93,11.5C10.35,13.64 7.94,15.39 5.65,12.42C3.83,10.07 6.05,7.53 9.5,6.97C9.5,6.54 9.63,6.12 9.85,5.74C9.25,5.23 8.43,4.76 7.5,4.94C5.37,5.36 3.62,2.96 6.59,0.66M5,16H7A2,2 0 0,1 9,18V24H7V22H5V24H3V18A2,2 0 0,1 5,16M5,18V20H7V18H5M12.93,16H15L12.07,24H10L12.93,16M18,16H21V18H18V22H21V24H18A2,2 0 0,1 16,22V18A2,2 0 0,1 18,16Z" />
          `;
          if (variables.state === 'fan_only') {
            path = `
             <path d="M12,11A1,1 0 0,0 11,12A1,1 0 0,0 12,13A1,1 0 0,0 13,12A1,1 0 0,0 12,11M12.5,2C17,2 17.11,5.57 14.75,6.75C13.76,7.24 13.32,8.29 13.13,9.22C13.61,9.42 14.03,9.73 14.35,10.13C18.05,8.13 22.03,8.92 22.03,12.5C22.03,17 18.46,17.1 17.28,14.73C16.78,13.74 15.72,13.3 14.79,13.11C14.59,13.59 14.28,14 13.88,14.34C15.87,18.03 15.08,22 11.5,22C7,22 6.91,18.42 9.27,17.24C10.25,16.75 10.69,15.71 10.89,14.79C10.4,14.59 9.97,14.27 9.65,13.87C5.96,15.85 2,15.07 2,11.5C2,7 5.56,6.89 6.74,9.26C7.24,10.25 8.29,10.68 9.22,10.87C9.41,10.39 9.73,9.97 10.14,9.65C8.15,5.96 8.94,2 12.5,2Z" />
          `;
          }
          if (variables.state === 'heat_cool') {
             path = `
          <path d="M12,18A6,6 0 0,1 6,12C6,11 6.25,10.03 6.7,9.2L5.24,7.74C4.46,8.97 4,10.43 4,12A8,8 0 0,0 12,20V23L16,19L12,15M12,4V1L8,5L12,9V6A6,6 0 0,1 18,12C18,13 17.75,13.97 17.3,14.8L18.76,16.26C19.54,15.03 20,13.57 20,12A8,8 0 0,0 12,4Z" />
          `;
          }
          if (variables.state === 'cool') {
             path = `
          <path d="M20.79,13.95L18.46,14.57L16.46,13.44V10.56L18.46,9.43L20.79,10.05L21.31,8.12L19.54,7.65L20,5.88L18.07,5.36L17.45,7.69L15.45,8.82L13,7.38V5.12L14.71,3.41L13.29,2L12,3.29L10.71,2L9.29,3.41L11,5.12V7.38L8.5,8.82L6.5,7.69L5.92,5.36L4,5.88L4.47,7.65L2.7,8.12L3.22,10.05L5.55,9.43L7.55,10.56V13.45L5.55,14.58L3.22,13.96L2.7,15.89L4.47,16.36L4,18.12L5.93,18.64L6.55,16.31L8.55,15.18L11,16.62V18.88L9.29,20.59L10.71,22L12,20.71L13.29,22L14.7,20.59L13,18.88V16.62L15.5,15.17L17.5,16.3L18.12,18.63L20,18.12L19.53,16.35L21.3,15.88L20.79,13.95M9.5,10.56L12,9.11L14.5,10.56V13.44L12,14.89L9.5,13.44V10.56Z" />
          `;
          }
          if (variables.state === 'heat') {
             path = `
          <path d="M17.66 11.2C17.43 10.9 17.15 10.64 16.89 10.38C16.22 9.78 15.46 9.35 14.82 8.72C13.33 7.26 13 4.85 13.95 3C13 3.23 12.17 3.75 11.46 4.32C8.87 6.4 7.85 10.07 9.07 13.22C9.11 13.32 9.15 13.42 9.15 13.55C9.15 13.77 9 13.97 8.8 14.05C8.57 14.15 8.33 14.09 8.14 13.93C8.08 13.88 8.04 13.83 8 13.76C6.87 12.33 6.69 10.28 7.45 8.64C5.78 10 4.87 12.3 5 14.47C5.06 14.97 5.12 15.47 5.29 15.97C5.43 16.57 5.7 17.17 6 17.7C7.08 19.43 8.95 20.67 10.96 20.92C13.1 21.19 15.39 20.8 17.03 19.32C18.86 17.66 19.5 15 18.56 12.72L18.43 12.46C18.22 12 17.66 11.2 17.66 11.2M14.5 17.5C14.22 17.74 13.76 18 13.4 18.1C12.28 18.5 11.16 17.94 10.5 17.28C11.69 17 12.4 16.12 12.61 15.23C12.78 14.43 12.46 13.77 12.33 13C12.21 12.26 12.23 11.63 12.5 10.94C12.69 11.32 12.89 11.7 13.13 12C13.9 13 15.11 13.44 15.37 14.8C15.41 14.94 15.43 15.08 15.43 15.23C15.46 16.05 15.1 16.95 14.5 17.5H14.5Z" />
          `;
          }
          if (variables.state === 'dry') {
             path = `
          <path d="M12,3.25C12,3.25 6,10 6,14C6,17.32 8.69,20 12,20A6,6 0 0,0 18,14C18,10 12,3.25 12,3.25M14.47,9.97L15.53,11.03L9.53,17.03L8.47,15.97M9.75,10A1.25,1.25 0 0,1 11,11.25A1.25,1.25 0 0,1 9.75,12.5A1.25,1.25 0 0,1 8.5,11.25A1.25,1.25 0 0,1 9.75,10M14.25,14.5A1.25,1.25 0 0,1 15.5,15.75A1.25,1.25 0 0,1 14.25,17A1.25,1.25 0 0,1 13,15.75A1.25,1.25 0 0,1 14.25,14.5Z" />
          `;
          }
          return `<svg viewBox="0 0 24 24">${path}</svg>`;
        ]]]

  icon_radio:
    styles:
      custom_fields:
        icon:
          - width: 89%
          - margin-top: -7%
          - margin-left: 1%
          - fill: >
              [[[
                return variables.state === 'on' ? '#5daeea' : '#9da0a2';
              ]]]
    custom_fields:
      icon: >
        <svg viewBox="0 0 24 24">
          <path d="M20,6A2,2 0 0,1 22,8V20A2,2 0 0,1 20,22H4A2,2 0 0,1 2,20V8C2,7.15 2.53,6.42 3.28,6.13L15.71,1L16.47,2.83L8.83,6H20M20,8H4V12H16V10H18V12H20V8M7,14A3,3 0 0,0 4,17A3,3 0 0,0 7,20A3,3 0 0,0 10,17A3,3 0 0,0 7,14Z" />
        </svg> 

  icon_netflix4:
    custom_fields:
      icon: >
        <svg viewBox="50 50 300 300">
          <g
            <g
               id="g4182">
              <g
                 id="g5747"
                 transform="matrix(0.29074008,0,0,0.29074008,81.631476,113.77111)">
                <path
                   id="path4159"
                   d="m 114.95508,-189.22852 188.12109,533.06641 0,-0.24219 14.85352,42.02539 c 82.68109,233.9563 127.10203,359.39701 127.36328,359.65821 0.17284,0.1729 12.68225,0.92753 27.79883,1.67773 45.79984,2.2727 102.55492,7.14269 145.60937,12.49219 9.91766,1.23215 18.45293,1.86506 19.04883,1.41601 l -186.66406,-529.5664 0,0.0976 -17.27735,-48.75 c -16.88185,-47.6341 -28.15376,-79.49 -95.97656,-271.249996 -18.23693,-51.562504 -33.71225,-95.296904 -34.39062,-97.187504 l -1.23438,-3.4375 -93.62695,0 -93.625,0 z"
                   style="fill:#e50914;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
                <path
                   style="fill:#b1060f;fill-opacity:1;fill-rule:evenodd;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
                   d="m 451.82617,-188.60352 -0.36914,210.000004 -0.37109,209.999996 -17.27735,-48.75 c -0.006,-0.0168 -0.0273,-0.0789 -0.0332,-0.0957 l -22.32617,467.51563 c 21.95088,61.98892 33.71165,95.08081 33.84375,95.21289 0.17284,0.1729 12.68225,0.92753 27.79883,1.67773 45.79984,2.2727 102.55492,7.14269 145.60937,12.49219 9.96875,1.2385 18.54796,1.87275 19.06445,1.41016 0.5165,-0.4626 0.79775,-214.28135 0.625,-475.15235 l -0.31445,-474.31055 -93.125,0 -93.125,0 z"
                   id="path5715" />
                <path
                   style="fill:#b1060f;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
                   d="m 114.95117,-189.22852 0,474.79102 c 0,261.1354 0.25552,475.04843 0.56836,475.36133 0.31282,0.3128 16.4847,-1.21398 35.9375,-3.39258 19.45278,-2.1787 46.33789,-4.88783 59.74414,-6.01953 20.56097,-1.7358 81.94995,-5.68286 89.0586,-5.72656 2.06786,-0.013 2.20049,-10.68157 2.5,-201.10157 l 0.3164,-201.08789 14.85352,42.02539 c 2.29551,6.49543 3.01555,8.52378 5.25195,14.85157 l 22.32031,-467.400394 c -4.72927,-13.371182 -2.25012,-6.352022 -7.66992,-21.675782 -18.23693,-51.562504 -33.71225,-95.296904 -34.39062,-97.187504 l -1.23438,-3.4375 -93.62695,0 -93.62891,0 z"
                   id="path5717" />
                <path
                   style="fill:#e50914;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
                   d="m 114.95508,-189.22852 188.12109,533.06641 0,-0.24219 14.85352,42.02539 c 82.68109,233.9563 127.10203,359.39701 127.36328,359.65821 0.17284,0.1729 12.68225,0.92753 27.79883,1.67773 45.79984,2.2727 102.55492,7.14269 145.60937,12.49219 9.91766,1.23215 18.45293,1.86506 19.04883,1.41601 l -186.66406,-529.5664 0,0.0976 -17.27735,-48.75 c -16.88185,-47.6341 -28.15376,-79.49 -95.97656,-271.249996 -18.23693,-51.562504 -33.71225,-95.296904 -34.39062,-97.187504 l -1.23438,-3.4375 -93.62695,0 -93.625,0 z"
                   id="path5721" />
              </g>
            </g>
          </g>
        </svg>

  icon_shutter:
    custom_fields:
      icon: >
        [[[ if (entity.state === 'on') return '<svg id="entks3jq2knq1"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
        shape-rendering="geometricPrecision"
        text-rendering="geometricPrecision"><style><![CDATA[#entks3jq2knq5 {
        animation-name: entks3jq2knq5__tt, entks3jq2knq5_c_o;
        animation-duration: 1000ms; animation-fill-mode: forwards;
        animation-timing-function: linear; animation-direction: reverse;
        animation-iteration-count: 1;   }@keyframes entks3jq2knq5__tt { 0%
        {transform: translate(0px,0px) translate(8.615000px,22.040000px)} 30%
        {transform: translate(0px,0px) translate(8.615000px,22.540000px)} 100%
        {transform: translate(0px,0px) translate(8.615000px,22.540000px)}
        }@keyframes entks3jq2knq5_c_o { 0% {opacity: 0} 30% {opacity: 1} 100%
        {opacity: 1} }#entks3jq2knq6 { animation-name: entks3jq2knq6__tt,
        entks3jq2knq6_c_o; animation-duration: 1000ms; animation-fill-mode:
        forwards; animation-timing-function: linear; animation-direction:
        reverse; animation-iteration-count: 1;   }@keyframes entks3jq2knq6__tt {
        0% {transform: translate(0px,0px) translate(8.615000px,29.460000px)} 10%
        {transform: translate(0px,0px) translate(8.615000px,29.460000px)} 40%
        {transform: translate(0px,0px) translate(8.615000px,29.960000px)} 100%
        {transform: translate(0px,0px) translate(8.615000px,29.960000px)}
        }@keyframes entks3jq2knq6_c_o { 0% {opacity: 0} 10% {opacity: 0} 40%
        {opacity: 1} 100% {opacity: 1} }#entks3jq2knq7 { animation-name:
        entks3jq2knq7__tt, entks3jq2knq7_c_o; animation-duration: 1000ms;
        animation-fill-mode: forwards; animation-timing-function: linear;
        animation-direction: reverse; animation-iteration-count: 1;  
        }@keyframes entks3jq2knq7__tt { 0% {transform: translate(0px,0px)
        translate(8.615000px,36.880000px)} 20% {transform: translate(0px,0px)
        translate(8.615000px,36.880000px)} 50% {transform: translate(0px,0px)
        translate(8.615000px,37.380000px)} 100% {transform: translate(0px,0px)
        translate(8.615000px,37.380000px)} }@keyframes entks3jq2knq7_c_o { 0%
        {opacity: 0} 20% {opacity: 0} 50% {opacity: 1} 100% {opacity: 1}
        }#entks3jq2knq8 { animation-name: entks3jq2knq8__tt, entks3jq2knq8_c_o;
        animation-duration: 1000ms; animation-fill-mode: forwards;
        animation-timing-function: linear; animation-direction: reverse;
        animation-iteration-count: 1;   }@keyframes entks3jq2knq8__tt { 0%
        {transform: translate(0px,0px) translate(8.615000px,44.300000px)} 30%
        {transform: translate(0px,0px) translate(8.615000px,44.300000px)} 60%
        {transform: translate(0px,0px) translate(8.615000px,44.800000px)} 100%
        {transform: translate(0px,0px) translate(8.615000px,44.800000px)}
        }@keyframes entks3jq2knq8_c_o { 0% {opacity: 0} 30% {opacity: 0} 60%
        {opacity: 1} 100% {opacity: 1} }#entks3jq2knq9 { animation-name:
        entks3jq2knq9__tt, entks3jq2knq9_c_o; animation-duration: 1000ms;
        animation-fill-mode: forwards; animation-timing-function: linear;
        animation-direction: reverse; animation-iteration-count: 1;  
        }@keyframes entks3jq2knq9__tt { 0% {transform: translate(0px,0px)
        translate(8.615000px,51.730000px)} 40% {transform: translate(0px,0px)
        translate(8.615000px,51.730000px)} 70% {transform: translate(0px,0px)
        translate(8.615000px,52.230000px)} 100% {transform: translate(0px,0px)
        translate(8.615000px,52.230000px)} }@keyframes entks3jq2knq9_c_o { 0%
        {opacity: 0} 40% {opacity: 0} 70% {opacity: 1} 100% {opacity: 1}
        }#entks3jq2knq10 { animation-name: entks3jq2knq10__tt,
        entks3jq2knq10_c_o; animation-duration: 1000ms; animation-fill-mode:
        forwards; animation-timing-function: linear; animation-direction:
        reverse; animation-iteration-count: 1;   }@keyframes entks3jq2knq10__tt
        { 0% {transform: translate(0px,0px) translate(8.615000px,59.150000px)}
        50% {transform: translate(0px,0px) translate(8.615000px,59.150000px)}
        80% {transform: translate(0px,0px) translate(8.615000px,59.650000px)}
        100% {transform: translate(0px,0px) translate(8.615000px,59.650000px)}
        }@keyframes entks3jq2knq10_c_o { 0% {opacity: 0} 50% {opacity: 0} 80%
        {opacity: 1} 100% {opacity: 1} }]]></style><g id="entks3jq2knq2"
        transform="matrix(0.28549000620842 0 0 0.35877102613449 0.30161800980568
        -2.55328607559204)"><rect id="entks3jq2knq3" width="71.311996"
        height="1.914000" rx="0" ry="0" transform="matrix(1 0 0 1
        4.90700006484985 12.43799972534180)" fill="rgb(95,98,103)"
        stroke="none" stroke-width="1"/><rect id="entks3jq2knq4"
        width="71.311996" height="5.378000" rx="0" ry="0" transform="matrix(1 0
        0 1 4.90700006484985 14.98700046539307)" fill="rgb(95,98,103)"
        stroke="none" stroke-width="1"/><rect id="entks3jq2knq5"
        width="64.583000" height="4.834000" rx="0" ry="0"
        transform="translate(0,0) translate(8.615000,22.540000)"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/><rect
        id="entks3jq2knq6" width="64.583000" height="4.834000" rx="0" ry="0"
        transform="translate(0,0) translate(8.615000,29.960000)"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/><rect
        id="entks3jq2knq7" width="64.583000" height="4.833000" rx="0" ry="0"
        transform="translate(0,0) translate(8.615000,37.380000)"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/><rect
        id="entks3jq2knq8" width="64.583000" height="4.834000" rx="0" ry="0"
        transform="translate(0,0) translate(8.615000,44.800000)"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/><rect
        id="entks3jq2knq9" width="64.583000" height="4.834000" rx="0" ry="0"
        transform="translate(0,0) translate(8.615000,52.230000)"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"
        stroke-opacity="0"/><rect id="entks3jq2knq10" width="64.583000"
        height="4.834000" rx="0" ry="0" transform="translate(0,0)
        translate(8.615000,59.650000)" fill="rgb(95,98,103)" stroke="none"
        stroke-width="1"/><rect id="entks3jq2knq11" width="2.125000"
        height="34.525002" rx="0" ry="0" transform="matrix(1 0 0 1
        4.90700006484985 22.53599929809570)" fill="rgb(95,98,103)"
        stroke="none" stroke-width="1"/><polygon id="entks3jq2knq12"
        points="6.745000,57.499000 5.169000,57.499000 4.898000,58.955000
        7.041000,58.955000" fill="rgb(95,98,103)" stroke="none"
        stroke-width="1"/></g></svg> ';   else return '<svg id="exm5ne46fz2e1"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
        shape-rendering="geometricPrecision"
        text-rendering="geometricPrecision"><style><![CDATA[#exm5ne46fz2e4
        {animation: exm5ne46fz2e4_c_o 1000ms linear 1 normal forwards}@keyframes
        exm5ne46fz2e4_c_o { 0% {opacity: 0.500000} 100% {opacity: 1}
        }#exm5ne46fz2e5 { animation-name: exm5ne46fz2e5__tt, exm5ne46fz2e5_c_o;
        animation-duration: 1000ms; animation-fill-mode: forwards;
        animation-timing-function: linear; animation-direction: normal;
        animation-iteration-count: 1;   }@keyframes exm5ne46fz2e5__tt { 0%
        {transform: translate(0px,0px) translate(8.615000px,22.040000px)} 30%
        {transform: translate(0px,0px) translate(8.615000px,22.540000px)} 100%
        {transform: translate(0px,0px) translate(8.615000px,22.540000px)}
        }@keyframes exm5ne46fz2e5_c_o { 0% {opacity: 0} 30% {opacity: 1} 100%
        {opacity: 1} }#exm5ne46fz2e6 { animation-name: exm5ne46fz2e6__tt,
        exm5ne46fz2e6_c_o; animation-duration: 1000ms; animation-fill-mode:
        forwards; animation-timing-function: linear; animation-direction:
        normal; animation-iteration-count: 1;   }@keyframes exm5ne46fz2e6__tt {
        0% {transform: translate(0px,0px) translate(8.615000px,29.460000px)} 10%
        {transform: translate(0px,0px) translate(8.615000px,29.460000px)} 40%
        {transform: translate(0px,0px) translate(8.615000px,29.960000px)} 100%
        {transform: translate(0px,0px) translate(8.615000px,29.960000px)}
        }@keyframes exm5ne46fz2e6_c_o { 0% {opacity: 0} 10% {opacity: 0} 40%
        {opacity: 1} 100% {opacity: 1} }#exm5ne46fz2e7 { animation-name:
        exm5ne46fz2e7__tt, exm5ne46fz2e7_c_o; animation-duration: 1000ms;
        animation-fill-mode: forwards; animation-timing-function: linear;
        animation-direction: normal; animation-iteration-count: 1;   }@keyframes
        exm5ne46fz2e7__tt { 0% {transform: translate(0px,0px)
        translate(8.615000px,36.880000px)} 20% {transform: translate(0px,0px)
        translate(8.615000px,36.880000px)} 50% {transform: translate(0px,0px)
        translate(8.615000px,37.380000px)} 100% {transform: translate(0px,0px)
        translate(8.615000px,37.380000px)} }@keyframes exm5ne46fz2e7_c_o { 0%
        {opacity: 0} 20% {opacity: 0} 50% {opacity: 1} 100% {opacity: 1}
        }#exm5ne46fz2e8 { animation-name: exm5ne46fz2e8__tt, exm5ne46fz2e8_c_o;
        animation-duration: 1000ms; animation-fill-mode: forwards;
        animation-timing-function: linear; animation-direction: normal;
        animation-iteration-count: 1;   }@keyframes exm5ne46fz2e8__tt { 0%
        {transform: translate(0px,0px) translate(8.615000px,44.300000px)} 30%
        {transform: translate(0px,0px) translate(8.615000px,44.300000px)} 60%
        {transform: translate(0px,0px) translate(8.615000px,44.800000px)} 100%
        {transform: translate(0px,0px) translate(8.615000px,44.800000px)}
        }@keyframes exm5ne46fz2e8_c_o { 0% {opacity: 0} 30% {opacity: 0} 60%
        {opacity: 1} 100% {opacity: 1} }#exm5ne46fz2e9 { animation-name:
        exm5ne46fz2e9__tt, exm5ne46fz2e9_c_o; animation-duration: 1000ms;
        animation-fill-mode: forwards; animation-timing-function: linear;
        animation-direction: normal; animation-iteration-count: 1;   }@keyframes
        exm5ne46fz2e9__tt { 0% {transform: translate(0px,0px)
        translate(8.615000px,51.730000px)} 40% {transform: translate(0px,0px)
        translate(8.615000px,51.730000px)} 70% {transform: translate(0px,0px)
        translate(8.615000px,52.230000px)} 100% {transform: translate(0px,0px)
        translate(8.615000px,52.230000px)} }@keyframes exm5ne46fz2e9_c_o { 0%
        {opacity: 0} 40% {opacity: 0} 70% {opacity: 1} 100% {opacity: 1}
        }#exm5ne46fz2e10 { animation-name: exm5ne46fz2e10__tt,
        exm5ne46fz2e10_c_o; animation-duration: 1000ms; animation-fill-mode:
        forwards; animation-timing-function: linear; animation-direction:
        normal; animation-iteration-count: 1;   }@keyframes exm5ne46fz2e10__tt {
        0% {transform: translate(0px,0px) translate(8.615000px,59.150000px)} 50%
        {transform: translate(0px,0px) translate(8.615000px,59.150000px)} 80%
        {transform: translate(0px,0px) translate(8.615000px,59.650000px)} 100%
        {transform: translate(0px,0px) translate(8.615000px,59.650000px)}
        }@keyframes exm5ne46fz2e10_c_o { 0% {opacity: 0} 50% {opacity: 0} 80%
        {opacity: 1} 100% {opacity: 1} }#exm5ne46fz2e11 {animation:
        exm5ne46fz2e11_c_o 1000ms linear 1 normal forwards}@keyframes
        exm5ne46fz2e11_c_o { 0% {opacity: 0.500000} 100% {opacity: 1}
        }]]></style><g id="exm5ne46fz2e2" transform="matrix(0.28549000620842 0 0
        0.35877102613449 0.30161800980568 -2.55328607559204)"><rect
        id="exm5ne46fz2e3" width="71.311996" height="1.914000" rx="0" ry="0"
        transform="matrix(1 0 0 1 4.90700006484985 12.43799972534180)"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/><rect
        id="exm5ne46fz2e4" width="71.311996" height="5.378000" rx="0" ry="0"
        transform="matrix(1 0 0 1 4.90700006484985 14.98700046539307)"
        opacity="0.5" fill="rgb(158,160,162)" stroke="none"
        stroke-width="1"/><rect id="exm5ne46fz2e5" width="64.583000"
        height="4.834000" rx="0" ry="0" transform="translate(0,0)
        translate(8.615000,22.040000)" opacity="0" fill="rgb(95,98,103)"
        stroke="none" stroke-width="1"/><rect id="exm5ne46fz2e6"
        width="64.583000" height="4.834000" rx="0" ry="0"
        transform="translate(0,0) translate(8.615000,29.460000)" opacity="0"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/><rect
        id="exm5ne46fz2e7" width="64.583000" height="4.833000" rx="0" ry="0"
        transform="translate(0,0) translate(8.615000,36.880000)" opacity="0"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/><rect
        id="exm5ne46fz2e8" width="64.583000" height="4.834000" rx="0" ry="0"
        transform="translate(0,0) translate(8.615000,44.300000)" opacity="0"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/><rect
        id="exm5ne46fz2e9" width="64.583000" height="4.834000" rx="0" ry="0"
        transform="translate(0,0) translate(8.615000,51.730000)" opacity="0"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"
        stroke-opacity="0"/><rect id="exm5ne46fz2e10" width="64.583000"
        height="4.834000" rx="0" ry="0" transform="translate(0,0)
        translate(8.615000,59.150000)" opacity="0" fill="rgb(95,98,103)"
        stroke="none" stroke-width="1"/><rect id="exm5ne46fz2e11"
        width="2.125000" height="34.525002" rx="0" ry="0" transform="matrix(1 0
        0 1 4.90700006484985 22.53599929809570)" opacity="0.5"
        fill="rgb(158,160,162)" stroke="none" stroke-width="1"/><polygon
        id="exm5ne46fz2e12" points="6.745000,57.499000 5.169000,57.499000
        4.898000,58.955000 7.041000,58.955000" fill="rgb(95,98,103)"
        stroke="none" stroke-width="1"/></g></svg>'; ]]]

  icon_hang_light:
    custom_fields:
      icon: >
        [[[ if (entity.state === 'on') return '<svg id="e7x4u4hifr771"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
        shape-rendering="geometricPrecision"
        text-rendering="geometricPrecision"><style><![CDATA[#e7x4u4hifr774 {
        animation-name: e7x4u4hifr774__tt, e7x4u4hifr774_c_o;
        animation-duration: 1000ms; animation-fill-mode: forwards;
        animation-timing-function: linear; animation-direction: normal;
        animation-iteration-count: 1;   }@keyframes e7x4u4hifr774__tt { 0%
        {transform: translate(0px,0px) translate(0px,0px)} 50% {transform:
        translate(0px,0px) translate(0px,0.500000px)} 100% {transform:
        translate(0px,0px) translate(0px,0px)} }@keyframes e7x4u4hifr774_c_o {
        0% {opacity: 0} 100% {opacity: 1} }]]></style><g
        id="e7x4u4hifr772"><path id="e7x4u4hifr773"
        d="M11,2L11,7.674000C10.827000,7.735000,10.659000,7.811000,10.500000,7.902000C9.627000,8.408000,9.067000,9.319000,9.010000,10.326000C8.310000,10.478000,7.636000,10.683000,7,10.937000C3.906000,12.188000,2,14.499000,2,17L22,17C22,14.499000,20.094000,12.188000,17,10.937000C16.365000,10.684000,15.691000,10.479000,14.992000,10.328000C14.935000,9.320000,14.374000,8.408000,13.500000,7.902000C13.341000,7.812000,13.173000,7.736000,13,7.676000L13,2L11,2L11,2Z"
        fill="rgb(87,168,215)" stroke="none" stroke-width="1"/></g><g
        id="e7x4u4hifr774" transform="translate(0,0) translate(0,0)"
        opacity="0"><path id="e7x4u4hifr775"
        d="M9.019000,18.185000C9.019000,19.257000,9.591000,20.247000,10.519000,20.783000C11.447000,21.319000,12.591000,21.319000,13.519000,20.783000C14.447000,20.247000,15.019000,19.257000,15.019000,18.185000L9.019000,18.185000Z"
        fill="rgb(248,205,65)" stroke="none" stroke-width="1"/></g></svg> ' ;   
        else return '<svg id="e47a1uy8ttsc1" xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
        shape-rendering="geometricPrecision"
        text-rendering="geometricPrecision"><style><![CDATA[#e47a1uy8ttsc4 {
        animation-name: e47a1uy8ttsc4__tt, e47a1uy8ttsc4_c_o;
        animation-duration: 1000ms; animation-fill-mode: forwards;
        animation-timing-function: linear; animation-direction: normal;
        animation-iteration-count: 1;   }@keyframes e47a1uy8ttsc4__tt { 0%
        {transform: translate(0px,0px) translate(0px,0px)} 50% {transform:
        translate(0px,0px) translate(0px,0.500000px)} 100% {transform:
        translate(0px,0px) translate(0px,0px)} }@keyframes e47a1uy8ttsc4_c_o {
        0% {opacity: 1} 100% {opacity: 0.500000} }]]></style><g
        id="e47a1uy8ttsc2"><path id="e47a1uy8ttsc3"
        d="M11,2L11,7.674000C10.827000,7.735000,10.659000,7.811000,10.500000,7.902000C9.627000,8.408000,9.067000,9.319000,9.010000,10.326000C8.310000,10.478000,7.636000,10.683000,7,10.937000C3.906000,12.188000,2,14.499000,2,17L22,17C22,14.499000,20.094000,12.188000,17,10.937000C16.365000,10.684000,15.691000,10.479000,14.992000,10.328000C14.935000,9.320000,14.374000,8.408000,13.500000,7.902000C13.341000,7.812000,13.173000,7.736000,13,7.676000L13,2L11,2L11,2Z"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/></g><g
        id="e47a1uy8ttsc4" transform="translate(0,0) translate(0,0)"><path
        id="e47a1uy8ttsc5"
        d="M9.019000,18.185000C9.019000,19.257000,9.591000,20.247000,10.519000,20.783000C11.447000,21.319000,12.591000,21.319000,13.519000,20.783000C14.447000,20.247000,15.019000,19.257000,15.019000,18.185000L9.019000,18.185000Z"
        fill="rgb(158,160,162)" stroke="none" stroke-width="1"/></g></svg>'; ]]]

  icon_desk_lamp:
    custom_fields:
      icon: >
        [[[ if (entity.state === 'on') return '<svg id="epn96qwrxk61"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
        shape-rendering="geometricPrecision"
        text-rendering="geometricPrecision"><style><![CDATA[#epn96qwrxk64 {
        animation-name: epn96qwrxk64__tt, epn96qwrxk64_c_o; animation-duration:
        3000ms; animation-fill-mode: forwards; animation-timing-function:
        linear; animation-direction: normal; animation-iteration-count: 1;  
        }@keyframes epn96qwrxk64__tt { 0% {transform: translate(0px,0px)
        translate(0px,0px)} 16.666667% {transform: translate(0px,0px)
        translate(0.500000px,0.500000px)} 33.333333% {transform:
        translate(0px,0px) translate(0px,0px)} 100% {transform:
        translate(0px,0px) translate(0px,0px)} }@keyframes epn96qwrxk64_c_o { 0%
        {opacity: 0} 33.333333% {opacity: 1} 100% {opacity: 1} }]]></style><g
        id="epn96qwrxk62"><path id="epn96qwrxk63"
        d="M14.200000,13.100000L17.900000,10.600000L24,18.400000L32.500000,9.900000L22.900000,2.500000C21.100000,1.100000,18.500000,1.300000,16.900000,2.900000C15.500000,4.300000,15.200000,6.500000,16.100000,8.200000L12.500000,10.700000C7.100000,14.400000,4.600000,21,6.100000,27.300000C5.100000,28,4.500000,29.200000,4.500000,30.500000L3.600000,30.500000C3,30.500000,2.500000,31,2.500000,31.600000L2.500000,33.500000L19.500000,33.500000L19.500000,31.600000C19.500000,31,19,30.500000,18.400000,30.500000L17.500000,30.500000L17.500000,29.500000C17.500000,28.900000,17.100000,28.500000,16.500000,28.500000C15.900000,28.500000,15.500000,28.900000,15.500000,29.500000L15.500000,30.500000L12.500000,30.500000C12.500000,28.500000,11,26.800000,9.100000,26.600000C7.800000,21.500000,9.800000,16.100000,14.200000,13.100000Z"
        transform="matrix(0.64698941360264 0 0 0.64698941360264 0.67768526000000
        0.65705442500000)" fill="rgb(87,168,215)" stroke="none"
        stroke-width="1"/></g><g id="epn96qwrxk64" transform="translate(0,0)
        translate(0,0)" opacity="0"><path id="epn96qwrxk65"
        d="M27.200000,18C28.500000,18.400000,30,18,31.100000,17C32.100000,16,32.500000,14.500000,32.100000,13.100000L27.200000,18Z"
        transform="matrix(1 0 0 1 -9.79945100000000 -4.98629300000000)"
        fill="rgb(248,205,65)" stroke="none" stroke-width="1"/></g></svg> ';  
        else return '<svg id="egc1unvcnm5e1" xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
        shape-rendering="geometricPrecision"
        text-rendering="geometricPrecision"><g id="egc1unvcnm5e2"><path
        id="egc1unvcnm5e3"
        d="M14.200000,13.100000L17.900000,10.600000L24,18.400000L32.500000,9.900000L22.900000,2.500000C21.100000,1.100000,18.500000,1.300000,16.900000,2.900000C15.500000,4.300000,15.200000,6.500000,16.100000,8.200000L12.500000,10.700000C7.100000,14.400000,4.600000,21,6.100000,27.300000C5.100000,28,4.500000,29.200000,4.500000,30.500000L3.600000,30.500000C3,30.500000,2.500000,31,2.500000,31.600000L2.500000,33.500000L19.500000,33.500000L19.500000,31.600000C19.500000,31,19,30.500000,18.400000,30.500000L17.500000,30.500000L17.500000,29.500000C17.500000,28.900000,17.100000,28.500000,16.500000,28.500000C15.900000,28.500000,15.500000,28.900000,15.500000,29.500000L15.500000,30.500000L12.500000,30.500000C12.500000,28.500000,11,26.800000,9.100000,26.600000C7.800000,21.500000,9.800000,16.100000,14.200000,13.100000Z"
        transform="matrix(0.64698941360264 0 0 0.64698941360264 0.67768526000000
        0.65705442500000)" fill="rgb(95,98,103)" stroke="none"
        stroke-width="1"/></g><g id="egc1unvcnm5e4" opacity="0.5"><path
        id="egc1unvcnm5e5"
        d="M27.200000,18C28.500000,18.400000,30,18,31.100000,17C32.100000,16,32.500000,14.500000,32.100000,13.100000L27.200000,18Z"
        transform="matrix(1 0 0 1 -9.79945100000000 -4.98629300000000)"
        fill="rgb(158,160,162)" stroke="none" stroke-width="1"/></g></svg>'; ]]]

  icon_hall_light:
    custom_fields:
      icon: >
        [[[ if (entity.state === 'on') return '<svg id="eebx8xo4db9m1"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
        shape-rendering="geometricPrecision"
        text-rendering="geometricPrecision"><style><![CDATA[#eebx8xo4db9m2 {
        animation-name: eebx8xo4db9m2__tt, eebx8xo4db9m2_c_o;
        animation-duration: 1000ms; animation-fill-mode: forwards;
        animation-timing-function: linear; animation-direction: normal;
        animation-iteration-count: 1;   }@keyframes eebx8xo4db9m2__tt { 0%
        {transform: translate(0px,0px) translate(0px,0px)} 50% {transform:
        translate(0px,0px) translate(0px,0.500000px)} 100% {transform:
        translate(0px,0px) translate(0px,0px)} }@keyframes eebx8xo4db9m2_c_o {
        0% {opacity: 0} 100% {opacity: 1} }]]></style><g id="eebx8xo4db9m2"
        transform="translate(0,0) translate(0,0)" opacity="0"><path
        id="eebx8xo4db9m3"
        d="M12,11C10.619000,11,9.500000,12.119000,9.500000,13.500000C9.500000,14.881000,10.619000,16,12,16C13.381000,16,14.500000,14.881000,14.500000,13.500000C14.500000,12.119000,13.381000,11,12,11ZM4.500000,13C3.119000,13,2,14.119000,2,15.500000C2,16.881000,3.119000,18,4.500000,18C5.881000,18,7,16.881000,7,15.500000C7,14.119000,5.881000,13,4.500000,13ZM19.500000,13C18.119000,13,17,14.119000,17,15.500000C17,16.881000,18.119000,18,19.500000,18C20.881000,18,22,16.881000,22,15.500000C22,14.119000,20.881000,13,19.500000,13Z"
        fill="rgb(248,205,65)" stroke="none" stroke-width="1"/></g><g
        id="eebx8xo4db9m4"><path id="eebx8xo4db9m5"
        d="M9.015000,2.006000L9.015000,3.006000C9.015000,3.542000,9.587000,4.037000,10.515000,4.305000C10.750000,4.373000,11.002000,4.424000,11.265000,4.458000L11.263000,10.092000C11.509000,10.036000,11.763000,10.008000,12.015000,10.006000C12.267000,10.007000,12.519000,10.035000,12.765000,10.090000L12.765000,4.458000C13.028000,4.424000,13.280000,4.373000,13.515000,4.305000C14.443000,4.037000,15.015000,3.542000,15.015000,3.006000L15.015000,2.006000L9.015000,2.006000ZM11.220000,16.910000C11.005000,18.448000,9.700000,19.637000,8.103000,19.637000C7.299000,19.637000,6.514000,19.262000,5.923000,18.705000C5.480000,18.902000,5,19.004000,4.515000,19.006000C4.458000,19.005000,4.400000,19.002000,4.343000,18.998000C5.268000,20.204000,6.683000,21.137000,8.103000,21.137000C9.363000,21.137000,10.428000,20.545000,11.265000,19.729000L11.265000,21.256000C11.265000,21.670000,11.601000,22.006000,12.015000,22.006000C12.414000,22.005000,12.743000,21.655000,12.763000,21.256000L12.763000,19.729000C13.600000,20.546000,14.667000,21.137000,15.927000,21.137000C17.346000,21.137000,18.758000,20.205000,19.683000,19C19.627000,19.004000,19.571000,19.006000,19.515000,19.006000C19.029000,19.005000,18.549000,18.904000,18.105000,18.707000C17.514000,19.263000,16.731000,19.637000,15.927000,19.637000C14.330000,19.637000,13.025000,18.449000,12.810000,16.910000C12.550000,16.973000,12.283000,17.005000,12.015000,17.006000C11.747000,17.005000,11.481000,16.973000,11.220000,16.910000Z"
        fill="rgb(87,168,215)" stroke="none" stroke-width="1"/></g></svg> '
        ;   else return '<svg id="ey01lrwhsyxh1"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
        shape-rendering="geometricPrecision"
        text-rendering="geometricPrecision"><style><![CDATA[#ey01lrwhsyxh2 {
        animation-name: ey01lrwhsyxh2__tt, ey01lrwhsyxh2_c_o;
        animation-duration: 1000ms; animation-fill-mode: forwards;
        animation-timing-function: linear; animation-direction: normal;
        animation-iteration-count: 1;   }@keyframes ey01lrwhsyxh2__tt { 0%
        {transform: translate(0px,0px) translate(0px,0px)} 50% {transform:
        translate(0px,0px) translate(0px,0.500000px)} 100% {transform:
        translate(0px,0px) translate(0px,0px)} }@keyframes ey01lrwhsyxh2_c_o {
        0% {opacity: 1} 100% {opacity: 0.500000} }]]></style><g
        id="ey01lrwhsyxh2" transform="translate(0,0) translate(0,0)"><path
        id="ey01lrwhsyxh3"
        d="M12,11C10.619000,11,9.500000,12.119000,9.500000,13.500000C9.500000,14.881000,10.619000,16,12,16C13.381000,16,14.500000,14.881000,14.500000,13.500000C14.500000,12.119000,13.381000,11,12,11ZM4.500000,13C3.119000,13,2,14.119000,2,15.500000C2,16.881000,3.119000,18,4.500000,18C5.881000,18,7,16.881000,7,15.500000C7,14.119000,5.881000,13,4.500000,13ZM19.500000,13C18.119000,13,17,14.119000,17,15.500000C17,16.881000,18.119000,18,19.500000,18C20.881000,18,22,16.881000,22,15.500000C22,14.119000,20.881000,13,19.500000,13Z"
        fill="rgb(158,160,162)" stroke="none" stroke-width="1"/></g><g
        id="ey01lrwhsyxh4"><path id="ey01lrwhsyxh5"
        d="M9.015000,2.006000L9.015000,3.006000C9.015000,3.542000,9.587000,4.037000,10.515000,4.305000C10.750000,4.373000,11.002000,4.424000,11.265000,4.458000L11.263000,10.092000C11.509000,10.036000,11.763000,10.008000,12.015000,10.006000C12.267000,10.007000,12.519000,10.035000,12.765000,10.090000L12.765000,4.458000C13.028000,4.424000,13.280000,4.373000,13.515000,4.305000C14.443000,4.037000,15.015000,3.542000,15.015000,3.006000L15.015000,2.006000L9.015000,2.006000ZM11.220000,16.910000C11.005000,18.448000,9.700000,19.637000,8.103000,19.637000C7.299000,19.637000,6.514000,19.262000,5.923000,18.705000C5.480000,18.902000,5,19.004000,4.515000,19.006000C4.458000,19.005000,4.400000,19.002000,4.343000,18.998000C5.268000,20.204000,6.683000,21.137000,8.103000,21.137000C9.363000,21.137000,10.428000,20.545000,11.265000,19.729000L11.265000,21.256000C11.265000,21.670000,11.601000,22.006000,12.015000,22.006000C12.414000,22.005000,12.743000,21.655000,12.763000,21.256000L12.763000,19.729000C13.600000,20.546000,14.667000,21.137000,15.927000,21.137000C17.346000,21.137000,18.758000,20.205000,19.683000,19C19.627000,19.004000,19.571000,19.006000,19.515000,19.006000C19.029000,19.005000,18.549000,18.904000,18.105000,18.707000C17.514000,19.263000,16.731000,19.637000,15.927000,19.637000C14.330000,19.637000,13.025000,18.449000,12.810000,16.910000C12.550000,16.973000,12.283000,17.005000,12.015000,17.006000C11.747000,17.005000,11.481000,16.973000,11.220000,16.910000Z"
        fill="rgb(95,98,103)" stroke="none" stroke-width="1"/></g></svg>'; ]]]


  icon_three_light:
    custom_fields:
        icon: >
          [[[ if (entity.state === 'on') return '<svg id="er2qf9ff1nsp1"
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
          shape-rendering="geometricPrecision"
          text-rendering="geometricPrecision"><style><![CDATA[#er2qf9ff1nsp2 {
          animation-name: er2qf9ff1nsp2__tt, er2qf9ff1nsp2_c_o;
          animation-duration: 1000ms; animation-fill-mode: forwards;
          animation-timing-function: linear; animation-direction: normal;
          animation-iteration-count: 1;   }@keyframes er2qf9ff1nsp2__tt { 0%
          {transform: translate(0px,0px) translate(0px,0px)} 50% {transform:
          translate(0px,0px) translate(0px,1px)} 100% {transform:
          translate(0px,0px) translate(0px,0px)} }@keyframes er2qf9ff1nsp2_c_o {
          0% {opacity: 0} 100% {opacity: 1} }]]></style><g id="er2qf9ff1nsp2"
          transform="translate(0,0) translate(0,0)" opacity="0"><path
          id="er2qf9ff1nsp3"
          d="M3.750000,11.474000C2.231000,11.474000,1,12.706000,1,14.224000C1,15.743000,2.231000,16.974000,3.750000,16.974000C5.269000,16.974000,6.500000,15.743000,6.500000,14.224000C6.500000,12.706000,5.269000,11.474000,3.750000,11.474000ZM20.250000,11.474000C18.731000,11.474000,17.500000,12.706000,17.500000,14.224000C17.500000,15.743000,18.731000,16.974000,20.250000,16.974000C21.769000,16.974000,23,15.743000,23,14.224000C23,12.706000,21.769000,11.474000,20.250000,11.474000ZM12,13.674000C10.481000,13.674000,9.250000,14.906000,9.250000,16.424000C9.250000,17.943000,10.481000,19.174000,12,19.174000C13.519000,19.174000,14.750000,17.943000,14.750000,16.424000C14.750000,14.906000,13.519000,13.674000,12,13.674000Z"
          transform="matrix(1 0 0 1 0 0)" opacity="0.64" fill="rgb(248,205,65)"
          fill-rule="evenodd" stroke="none" stroke-width="1"/></g><g
          id="er2qf9ff1nsp4"><g id="er2qf9ff1nsp5"><path id="er2qf9ff1nsp6"
          d="M7.604000,5.490000L7.604000,7.238000L11.130000,7.238000L11.130000,10.201000C10.216000,9.326000,9.063000,8.694000,7.701000,8.694000C6.140000,8.694000,4.587000,9.720000,3.569000,11.045000C3.631000,11.041000,3.692000,11.039000,3.754000,11.038000C4.288000,11.039000,4.817000,11.151000,5.305000,11.367000C5.955000,10.756000,6.816000,10.344000,7.701000,10.344000C9.458000,10.344000,10.893000,11.652000,11.130000,13.344000C11.416000,13.275000,11.710000,13.240000,12.004000,13.238000C12.299000,13.240000,12.592000,13.275000,12.878000,13.344000C13.115000,11.652000,14.550000,10.344000,16.307000,10.344000C17.192000,10.344000,18.055000,10.757000,18.705000,11.369000C19.193000,11.153000,19.720000,11.040000,20.254000,11.038000C20.317000,11.040000,20.380000,11.043000,20.443000,11.047000C19.426000,9.720000,17.870000,8.694000,16.307000,8.694000C14.945000,8.694000,13.792000,9.328000,12.879000,10.203000L12.879000,7.238000L16.404000,7.238000L16.404000,5.490000L7.604000,5.490000Z"
          fill="rgb(87,168,215)" stroke="none" stroke-width="1"/></g></g></svg> '
          ;   else return '<svg id="eghnobpxht0e1"
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"
          shape-rendering="geometricPrecision"
          text-rendering="geometricPrecision"><style><![CDATA[#eghnobpxht0e2 {
          animation-name: eghnobpxht0e2__tt, eghnobpxht0e2_c_o;
          animation-duration: 1000ms; animation-fill-mode: forwards;
          animation-timing-function: linear; animation-direction: normal;
          animation-iteration-count: 1;   }@keyframes eghnobpxht0e2__tt { 0%
          {transform: translate(0px,0px) translate(0px,0px)} 50% {transform:
          translate(0px,0px) translate(0px,1px)} 100% {transform:
          translate(0px,0px) translate(0px,0px)} }@keyframes eghnobpxht0e2_c_o {
          0% {opacity: 1} 100% {opacity: 0.500000} }]]></style><g
          id="eghnobpxht0e2" transform="translate(0,0) translate(0,0)"><path
          id="eghnobpxht0e3"
          d="M3.750000,11.474000C2.231000,11.474000,1,12.706000,1,14.224000C1,15.743000,2.231000,16.974000,3.750000,16.974000C5.269000,16.974000,6.500000,15.743000,6.500000,14.224000C6.500000,12.706000,5.269000,11.474000,3.750000,11.474000ZM20.250000,11.474000C18.731000,11.474000,17.500000,12.706000,17.500000,14.224000C17.500000,15.743000,18.731000,16.974000,20.250000,16.974000C21.769000,16.974000,23,15.743000,23,14.224000C23,12.706000,21.769000,11.474000,20.250000,11.474000ZM12,13.674000C10.481000,13.674000,9.250000,14.906000,9.250000,16.424000C9.250000,17.943000,10.481000,19.174000,12,19.174000C13.519000,19.174000,14.750000,17.943000,14.750000,16.424000C14.750000,14.906000,13.519000,13.674000,12,13.674000Z"
          transform="matrix(1 0 0 1 0 0)" opacity="0.64" fill="rgb(158,160,162)"
          fill-rule="evenodd" stroke="none" stroke-width="1"/></g><g
          id="eghnobpxht0e4"><g id="eghnobpxht0e5"><path id="eghnobpxht0e6"
          d="M7.604000,5.490000L7.604000,7.238000L11.130000,7.238000L11.130000,10.201000C10.216000,9.326000,9.063000,8.694000,7.701000,8.694000C6.140000,8.694000,4.587000,9.720000,3.569000,11.045000C3.631000,11.041000,3.692000,11.039000,3.754000,11.038000C4.288000,11.039000,4.817000,11.151000,5.305000,11.367000C5.955000,10.756000,6.816000,10.344000,7.701000,10.344000C9.458000,10.344000,10.893000,11.652000,11.130000,13.344000C11.416000,13.275000,11.710000,13.240000,12.004000,13.238000C12.299000,13.240000,12.592000,13.275000,12.878000,13.344000C13.115000,11.652000,14.550000,10.344000,16.307000,10.344000C17.192000,10.344000,18.055000,10.757000,18.705000,11.369000C19.193000,11.153000,19.720000,11.040000,20.254000,11.038000C20.317000,11.040000,20.380000,11.043000,20.443000,11.047000C19.426000,9.720000,17.870000,8.694000,16.307000,8.694000C14.945000,8.694000,13.792000,9.328000,12.879000,10.203000L12.879000,7.238000L16.404000,7.238000L16.404000,5.490000L7.604000,5.490000Z"
          fill="rgb(95,98,103)" stroke="none" stroke-width="1"/></g></g></svg>';
          ]]]

  icon_thermostat:
    custom_fields:
      thermostat: >
        [[[ const state = entity.attributes.current_temperature; 
        return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="20.5" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
        <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle">${state}°</text></svg>`; ]]]

  icon_battery_empty:
    custom_fields:
      icon: >
        <svg viewBox="0 0 24 24" fill="none">
          <style>
              .low { animation: low 0.5s ease infinite both;    }
              @keyframes low { from { fill: #9da0a2;} to {fill: #dd1616;} }
          </style>
          <path d="M19.695 10.51a.51.51 0 011.022 0v2.98a.51.51 0 01-1.022 0v-2.98z" fill="#9da0a2" />
          <path fill-rule="evenodd" clip-rule="evenodd" d="M5.283 7a2 2 0 00-2 2v6a2 2 0 002 2h12a2 2 0 002-2V9a2 2 0 00-2-2h-12zm0 1a1 1 0 00-1 1v6a1 1 0 001 1h12a1 1 0 001-1V9a1 1 0 00-1-1h-12z" fill="#9da0a2" />
          <rect x="5.283" y="9" width="2" height="6" rx="1" fill="#9da0a2" class="low" />
        </svg>

  icon_battery_full:
    custom_fields:
      icon: >
        <svg viewBox="0 0 24 24" fill="none">
          <style>
            @keyframes blink {
              0%{} to { fill:#61d20a }
            }
          </style>
          <path d="M19.695 10.51a.51.51 0 011.022 0v2.98a.51.51 0 01-1.022 0v-2.98z" fill="#9da0a2"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M5.283 7a2 2 0 00-2 2v6a2 2 0 002 2h12a2 2 0 002-2V9a2 2 0 00-2-2h-12zm0 1a1 1 0 00-1 1v6a1 1 0 001 1h12a1 1 0 001-1V9a1 1 0 00-1-1h-12z" fill="#9da0a2"/>
          <path d="M11.964 11.537l.96-2.177-3.002 2.739 1.224.084-1.261 2.394 3.192-2.78-1.113-.26z" fill="#61d20a" style="animation:blink 1.5s cubic-bezier(1,-.01,0,.98) infinite both"/>
        </svg>

  icon_plex:
    custom_fields:
      icon: >
        <svg viewBox="0 0 50 50">
          <path d="M7.7.3h34.6c4.1 0 7.4 3.3 7.4 7.4v34.6c0 4.1-3.3 7.4-7.4 7.4H7.7c-4.1 0-7.4-3.3-7.4-7.4V7.7C.3 3.6 3.6.3 7.7.3z" fill="#282a2d"/>
          <path d="M25,7.1H14.6L25,25L14.6,42.9H25L35.4,25L25,7.1z" fill="#e5a00d"/>
        </svg>

  icon_hue:
    styles:
      custom_fields:
        icon:
          - width: 77%
          - margin-left: -14%
          - margin-top: 1%
    custom_fields:
      icon: >
        [[[
          const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes on {
                  0% {
                    transform: scale(0.85);
                  }
                  20% {
                    transform: scale(1.1);
                  }
                  40% {
                    transform: scale(0.95);
                  }
                  60% {
                    transform: scale(1.03);
                  }
                  80% {
                    transform: scale(0.97);
                  }
                  100% {
                    transform: scale(1);
                  }
                }
                .on {
                  animation: on 0.8s;
                  transform-origin: center;
                }
              </style>
              <path fill="#9da0a2" d="M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7"/>
              <path class="${state}" fill="${variables.light_color}" d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z"/>
            </svg>
          `;
        ]]]

  icon_shade:
    styles:
      custom_fields:
        icon:
          - width: 77%
          - margin-left: -15%
          - margin-top: 1%
    custom_fields:
      icon: >
        [[[
          const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes on {
                  0% {
                    transform: scale(0.85);
                  }
                  20% {
                    transform: scale(1.1);
                  }
                  40% {
                    transform: scale(0.95);
                  }
                  60% {
                    transform: scale(1.03);
                  }
                  80% {
                    transform: scale(0.97);
                  }
                  100% {
                    transform: scale(1);
                  }
                }
                .on {
                  animation: on 0.8s;
                  transform-origin: center;
                }
              </style>
              <path fill="#9da0a2" d="M26.4 25.6c.6-.3 1.1-.7 1.1-1.3L25 17.9l-2.5 6.4c0 .7.6 1.1 1.1 1.3v20.8h-5.5v2.7h13.7v-2.7h-5.5V25.6z"/>
              <path class="${state}" fill="${variables.light_color}" d="M24.6.9l-9.4.5c-.6.1-1.9 0-2.5 2.1s-2.4 9.1-4 16.9c-.2.7-.5 2-.5 2.3s-.4 1.6.9 1.6c.8.1 7.4.3 15.9.3 8.6 0 15.1-.3 15.9-.3 1.3-.1.9-1.3.9-1.6s-.3-1.6-.5-2.3c-1.6-7.8-3.4-14.8-4-16.9s-1.9-2-2.5-2.1c-1.6-.2-6.9-.4-9.4-.5"/>
            </svg>
          `;
        ]]]

  icon_tv:
    styles:
      custom_fields:
        icon:
          - width: 89%
          - margin-top: -7%
          - margin-left: 1%
          - fill: >
              [[[
                return variables.state === 'on' ? '#616161' : '#9da0a2';
              ]]]
    custom_fields:
      icon: >
        [[[
          const style = `
            <style>
              @keyframes on {
                from {
                  transform: scaleY(0);
                }
                to {
                  transform: scaleY(1);
                }
              }
              .on {
                animation: on 1s;
                transform-origin: -100% 46%;
                animation-fill-mode: forwards;
              }
              @keyframes off {
                from {
                  transform: scaleY(1);
                }
                to {
                  transform: scaleY(0);
                }
              }
              .off {
                animation: off 1s;
                transform-origin: -100% 46%;
                animation-fill-mode: forwards;
              }
            </style>
          `;
          const path = `
            <path d="M46 9.2v27.5H4.1V9.2H46m2.4-2.4H1.6v32.3h46.7c.1 0 .1-32.3.1-32.3zM11.9 43.2h26.3c.6 0 1.1-.4 1.1-1v-.3c0-.6-.4-1.1-1-1.1H11.9c-.6 0-1.1.4-1.1 1v.3a1.11 1.11 0 0 0 1.1 1.1z"/>
          `;
          const gradient = `
            <linearGradient id="A" gradientUnits="userSpaceOnUse" x1="5.401" y1="34.714" x2="43.817" y2="11.74">
              <stop offset="0" stop-color="#64acb7"/>
              <stop offset="1" stop-color="#7fdbe9"/>
            </linearGradient>
          `;
          if (variables.state === 'on' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${style} ${gradient} 
                <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
                <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
          }
          if (variables.state === 'on' && variables.timeout > 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${gradient} 
                <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
                <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
          }
          if (variables.state === 'off' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${style} ${gradient} 
                <path class="off" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
          } else {
            return `
              <svg viewBox="0 0 50 50"> ${style} 
                ${path}
              </svg>
            `;
          }
        ]]]

  icon_toggle:
    styles:
      custom_fields:
        icon:
          - width: 70%
          - margin-left: -8%
          - margin-top: 3%
    custom_fields:
      icon: >
        [[[
          if (variables.state === 'off') {
            return `
              <svg fill="currentColor" viewBox="0 0 16 16">
                <path d="M11 4a4 4 0 0 1 0 8H8a4.992 4.992 0 0 0 2-4 4.992 4.992 0 0 0-2-4h3zm-6 8a4 4 0 1 1 0-8 4 4 0 0 1 0 8zM0 8a5 5 0 0 0 5 5h6a5 5 0 0 0 0-10H5a5 5 0 0 0-5 5z"/>
              </svg>
            `;
          }

          if (variables.state === 'on') {
            return `
              <svg fill="currentColor" viewBox="0 0 16 16">
                <path d="M5 3a5 5 0 0 0 0 10h6a5 5 0 0 0 0-10H5zm6 9a4 4 0 1 1 0-8 4 4 0 0 1 0 8z"/>
              </svg>
            `;
          }
        ]]]

  icon_spot:
    styles:
      custom_fields:
        icon:
          - width: 70%
          - margin-left: -8%
          - margin-top: 3%
    custom_fields:
      icon: >
        [[[
          let state;
          if (variables.state === 'on' && variables.timeout < 2000) {
            state = 'on';
          } 
          if (variables.state === 'off' && variables.timeout < 2000) {
            state = 'off';
          }
          if (variables.state === 'on' && variables.timeout > 2000) {
            state = 'on_timeout';
          }
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes on {
                  0% {
                    transform: rotateZ(0deg);
                    animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                  }
                  70% {
                    transform: rotateZ(-15deg);
                    animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                  }
                  75% {
                    transform: rotateZ(-15deg);
                    animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                  }
                  88% {
                    transform: rotateZ(-11deg);
                  }
                  100% {
                    transform: rotateZ(-15deg);
                  }
                }
                @keyframes off {
                  0% {
                    transform: rotateZ(-15deg);
                    animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                  }
                  70% {
                    transform: rotateZ(0deg);
                    animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                  }
                  75% {
                    transform: rotateZ(0deg);
                    animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                  }
                  88% {
                    transform: rotateZ(-4deg);
                  }
                  100% {
                    transform: rotateZ(0deg);
                  }
                }
                .on {
                  animation: on 0.7s;
                  transform-origin: 40% 20%;
                  animation-fill-mode: forwards;
                  animation-delay: -0.1s;
                }
                .off {
                  animation: off 0.7s;
                  transform-origin: 40% 20%;
                  animation-fill-mode: forwards;
                }
                .on_timeout {
                  transform: rotateZ(-15deg);
                  transform-origin: 40% 20%;
                }
              </style>
              <path style="clip-path: url(#mask);" fill="#9da0a2" d="M40.5.8H17.1c-.1 0-.1 0-.1.1A3.12 3.12 0 0 0 20.1 4h6.1c.1 0 .1 0 .1.1v7.4L18 19.1l3.6 3.5 9.1-8.6c.4-.4.6-1 .7-1.6V4c0-.1 0-.1.1-.1h6c1.7.1 3.1-1.3 3-3.1z"/>
              <defs>
                <clipPath id="mask">
                  <path class="${state}" d="M0 9.1h24l8.3 8.8H50V-9H0z"/>
                </clipPath>
              </defs>
              <path class="${state}" fill="${variables.light_color}" d="M25.5 46.4s1.4.5 10.4-8.2c.5-.4 6.3-6.3 5.8-7.1-.7-.8-18.6-19.5-18.6-19.5s-.6-.9-8.6 6.4c-.6.5-8.7 8-7.7 9.1l18.7 19.3z"/>
            </svg>
          `;
        ]]]

  icon_imac:
    styles:
      custom_fields:
        icon:
          - width: 82%
          - margin-left: 1%
          - margin-top: -6%
          - fill: >
              [[[ return variables.state === 'on' ? '#72757c' : '#9da0a2'; ]]]
    custom_fields:
      icon: >
        [[[
          const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes on {
                  from {
                    opacity: 0.5;
                    transform: scale(0.6);
                  }
                  100% {
                    opacity: 1;
                  }
                }
                .on {
                  animation: on 0.8s cubic-bezier(0.25, 1, 0.5, 1);
                  transform-origin: center;
                }
              </style>
              <path class="${state}" d="M31.9 44.5c-1-.3-1.9.4-1.9-3.7h-9.9c0 4.2-.9 3.4-1.9 3.7s-.2.7-.2.7h14.1s.8-.3-.2-.7zM47.6 4.8H2.5c-1.1 0-2 .9-2 2v30.1c0 1.1.9 2 2 2h45c1.1 0 2-.9 2-2v-30a1.95 1.95 0 0 0-1.9-2.1zm-.7 26.4H3.2V7.6H47v23.6z"/>
            </svg>
          `;
        ]]]

  icon_monitors:
    styles:
      custom_fields:
        icon:
          - width: 73%
          - margin-left: -9%
    custom_fields:
      icon: >
        [[[
          const style = `
          <style>
            @keyframes cone {
              35% {
                transform: scale(0.8);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              36% {
                transform: translateY(0%);
              }
              49% {
                transform: scale(1.25);
              }
              63% {
                transform: scale(0.85);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              77% {
                transform: scale(1.15);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              95% {
                transform: scale(1);
              }
            }
            .cone {
              animation: cone 1.2s;
              transform-origin: center;
            }
            @keyframes speaker {
              0% {
                transform: scale(1);
              }
              40% {
                transform: scale(1);
              }
              49% {
                transform: scale(0.95);
              }
              63% {
                transform: scale(1);
              }
              77% {
                transform: scale(0.95);
              }
              100% {
                transform: scale(1);
              }
            }
            .speaker {
              animation: speaker 1.3s;
              transform-origin: center;
            }
          </style>
          `;
          const paths = `
          <g class="speaker">
            <path fill="#686868" d="M35.8 46.9H14.2c-1.1 0-2-1-2-2.3V6.7c0-1.3.9-2.3 2-2.3h21.5c1.1 0 2 1 2 2.3v37.9c0 1.2-.9 2.3-1.9 2.3z"/>
            <path fill="#2a2a2a" d="M39.2 1H10.8C9.4 1 8.3 2.1 8.2 3.5v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3c1.4 0 2.5-1.2 2.6-2.6V3.5c0-1.4-1.1-2.5-2.5-2.5zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4C22.5 8 23.6 7 25 7zm10.2 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6s-.1-1.1-.4-1.9.6-.9.6-.9h19.3c0-.1.8-.1.5.9z"/>
          </g>
          <path class="cone" fill="#e5dd00" d="M25 15.7c-6.2 0-11.3 5.1-11.3 11.3S18.8 38.3 25 38.3 36.3 33.2 36.3 27c-.1-6.3-5.1-11.3-11.3-11.3zm0 14.5a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c-.1 1.9-1.5 3.3-3.3 3.3z"/>
          `;
          if (variables.state === 'on' && variables.timeout < 2000) {
          return `
            <svg viewBox="0 0 50 50">
              ${style}
              ${paths}
            </svg>
          `;
          }

          return variables.state === 'on' && variables.timeout > 2000 ? `
            <svg viewBox="0 0 50 50">
              ${paths}
            </svg>
          ` : `
            <svg viewBox="0 0 50 50">
              <path fill="#9da0a2" d="M25 18.6c-4.6 0-8.4 3.8-8.4 8.4s3.8 8.4 8.4 8.4 8.4-3.8 8.4-8.4-3.7-8.4-8.4-8.4zm0 11.7a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c0 1.8-1.4 3.3-3.3 3.3zM39.2 1H10.9C9.4 1 8.3 2.1 8.3 3.6v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3a2.65 2.65 0 0 0 2.6-2.6v-43C41.7 2 40.5.9 39.2 1zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4S23.7 7 25 7zm10.3 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6l-.4-1.9c-.2-.9.6-.9.6-.9h19.3s.9.1.6.9zM25 38.2c-6.2 0-11.3-5.1-11.3-11.3a11.29 11.29 0 1 1 22.6 0c.1 6.3-5 11.3-11.3 11.3z"/>
            </svg>
          `;
        ]]]

  icon_lamp:
    styles:
      custom_fields:
        icon:
          - width: 79%
          - margin-left: -16%
    custom_fields:
      icon: >
        [[[
          const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes on {
                  0% {
                    transform: scale(0.85);
                  }
                  20% {
                    transform: scale(1.1);
                  }
                  40% {
                    transform: scale(0.95);
                  }
                  60% {
                    transform: scale(1.03);
                  }
                  80% {
                    transform: scale(0.97);
                  }
                }
                .on {
                  animation: on 0.8s;
                  transform-origin: center;
                }
              </style>
              <path fill="#9da0a2" d="M26.5 21.8l3.8-6.1H19.7l3.8 6.1c-5 .7-6.3 5.8-5.7 10.2.7 5.1 3.2 10.1 5.7 14.4H19v2.5h11.8v-2.5h-4.5C29 42 31.4 37 32.1 32c.6-4.4-.6-9.4-5.6-10.2zm3.1 9.1c-.3 4.3-2.3 8.7-4.4 12.4l-.2.1v.1-.1c-1.8-3-3.3-6.4-4.1-9.7-.7-3.1-1-7.2 2.7-8.4 1.4-.5 3.1-.1 4.2.8 1.6 1 1.8 3 1.8 4.8z"/>
              <path class="${state}" fill="${variables.light_color}" d="M38.1 20L35.7 3.8c-.3-1.9-.4-1.7-.6-2-.9-.6-2.3-.7-2.3-.7H17.4s-1.4 0-2.3.7c-.2.3-.3.1-.6 2C14 5.7 11.9 20 11.9 20s5.8.3 13.4.3h0c7.3 0 12.8-.3 12.8-.3z"/>
            </svg>
          `;
        ]]]

  icon_air_purifier:
    styles:
      custom_fields:
        icon:
          - width: 78%
          - margin-left: -10%
          - fill: >
              [[[ return variables.state === 'cool' ? '#5daeea' : '#9da0a2'; ]]]
    custom_fields:
      icon: >
        <svg viewBox="0 0 50 50">
          <path d="M36.8 1.2v1.7a5.34 5.34 0 0 1-5.3 5.3H18.4a5.34 5.34 0 0 1-5.3-5.3V1.2c-2.6.4-4.7 2.8-4.7 5.6v36.5c0 3.1 2.6 5.7 5.7 5.7h21.8c3.1 0 5.7-2.6 5.7-5.7V6.8c0-2.8-2.1-5.2-4.8-5.6zm-1.7 35.6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3c-.4.2-.8.4-1.4.6-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zM15.7 1.9v-.8h18.6V3c0 1.5-1.2 2.8-2.8 2.8H18.4c-1.5 0-2.8-1.2-2.8-2.8V1.9z"/>
        </svg>

  icon_fan:
    styles:
      custom_fields:
        icon:
          - width: 75%
          - margin-left: -3%
    custom_fields:
      icon: >
        [[[
          const style = `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes rotate {
                0% {
                  visibility: visible;
                  transform: rotate(0deg) translateZ(0);
                }
                100% {
                  transform: rotate(1080deg) translateZ(0);
                }
              }
              .start {
                animation: rotate 2.8s ease-in;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
              }
              .on_delay {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                animation-delay: 2.8s;
                visibility: hidden;
                will-change: transform;
              }
              .on_no_delay {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                will-change: transform;
              }
              .on {
                animation: rotate 1.8s linear forwards;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
                will-change: transform;
              }
              .end {
                animation: rotate 2.8s;
                transform-origin: center;
                fill: #9ca2a5;
                animation-timing-function: cubic-bezier(.61, 1, .88, 1);
              }
            </style>
          `;
          const path = `
          <circle cx="25" cy="25" r="6.6"/>
          <path d="M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z"/>
          `;
          if (variables.state === 'off' && variables.timeout < 2000) {
          return `${style}<g class="end">${path}</g></svg>`;
          }
          if (variables.state === 'off' && variables.timeout > 2000) {
          return `<svg viewBox="0 0 50 50" fill="#9ca2a5"><g>${path}</g></svg>`;
          }
          if (variables.state === 'on' && variables.timeout > 2000) {
          return `${style}<g class="on_no_delay">${path}</g></svg>`;
          }
          if (variables.state === 'on' && variables.timeout < 2000) {
          return `${style}<g class="start">${path}</g><g class="on_delay">${path}</g></svg>`;
          }

        ]]]

  icon_bathroom:
    styles:
      custom_fields:
        icon:
          - width: 78%
          - margin-left: -10%
    custom_fields:
      icon: >
        [[[
          let state;
          if (variables.state === 'on' && variables.timeout < 2000) {
            state = 'on';
          } 
          if (variables.state === 'off' && variables.timeout < 2000) {
            state = 'off';
          }
          if (variables.state === 'on' && variables.timeout > 2000) {
            state = 'on_timeout';
          }
          return `
            <svg viewBox="0 0 50 50" fill="${variables.light_color}">
              <style>
                @keyframes on {
                  0% {
                    transform: rotateZ(0deg) translate(0%, 0%);
                  }
                  100% {
                    transform: rotateZ(-90deg) translate(-1.5%, 0%);
                  }
                }
                @keyframes off {
                  0% {
                    transform: rotateZ(-90deg) translate(-1.5%, 0%);
                  }
                  45% {
                    transform: rotateZ(-40deg);
                  }
                  55% {
                    transform: rotateZ(0deg);
                  }
                  65% {
                    transform: rotateZ(-15deg);
                  }
                  75% {
                    transform: rotateZ(0deg);
                  }
                  85% {
                    transform: rotateZ(-5deg);
                  }
                  95% {
                    transform: rotateZ(0deg);
                  }
                }
                .on {
                  animation: on 0.45s;
                  animation-fill-mode: forwards;
                  transform-origin: 45% 41%;
                  transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);
                }
                .on_timeout {
                  transform: rotateZ(-90deg) translate(-1.5%, 0%);
                  transform-origin: 45% 41%;
                }
                .off {
                  animation: off 1.1s linear;
                  animation-delay: 0.05s;
                  animation-fill-mode: both;
                  transform-origin: 45% 41%;
                }
              </style>
              <path d="M12.9 1.2h2.5c1.6 0 2.9 1.3 2.9 2.9v18.6c0 1.4 1.1 2.5 2.4 2.5h20.5c.5 0 1 .4.9 1-.1 2.6-1.2 9.6-10.2 11v7.6c0 .2.2.4.4.4h1.5a1.58 1.58 0 0 1 1.6 1.6v.3a1.58 1.58 0 0 1-1.6 1.6H11a1.58 1.58 0 0 1-1.6-1.6v-.3a1.58 1.58 0 0 1 1.6-1.6h1.6c.2 0 .4-.2.4-.4v-7.6s-5.2-.3-5.2-5.9V4.2c0-1.6 1.3-2.9 2.9-2.9l2.2-.1c0 .1 0 0 0 0z"/>
              <path class="${state}" d="M22.3 18.8h18.3a1.58 1.58 0 0 1 1.6 1.6v.6a1.58 1.58 0 0 1-1.6 1.6h-19c-.4 0-.7-.3-.8-.7v-2.3c0-.4.3-.7.7-.8h.8z"/>
            </svg>
          `;
        ]]]

  icon_fan2:
    styles:
      custom_fields:
        icon:
          - width: 75%
          - margin-left: -3%
    custom_fields:
      icon: >
        [[[
          const path = `
            <circle cx="25" cy="25" r="6.6"/>
            <path d="M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z"/>
          `;
          const style = `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes rotate {
                  0% {
                    visibility: visible;
                    transform: rotate(0deg) translateZ(0);
                  }
                  100% {
                    transform: rotate(1080deg) translateZ(0);
                  }
                }
                .start {
                  animation: rotate 2.8s ease-in;
                  transform-origin: center;
                  fill: #5daeea;
                  visibility: hidden;
                  will-change: transform;
                }
                .on {
                  animation: rotate 1.8s linear infinite;
                  transform-origin: center;
                  fill: #5daeea;
                  animation-delay: 2.8s;
                  visibility: hidden;
                  will-change: transform;
                }
                .end {
                  animation: rotate 2.8s;
                  transform-origin: center;
                  fill: #9ca2a5;
                  animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
                  will-change: transform;
                }
                .start_timeout {
                  animation: rotate 1.8s linear infinite;
                  transform-origin: center;
                  fill: #5daeea;
                  visibility: hidden;
                  will-change: transform;
                }
                .end_timeout {
                  fill: #9ca2a5;
                }
              </style>
          `;
          if (variables.state === 'on' && variables.timeout < 2000) {
            return `${style}<g class="start">${path}</g><g class="on">${path}</g></svg>`;
          }
          if (variables.state === 'off' && variables.timeout < 2000) {
            return `${style}<g class="end">${path}</g></svg>`;
          }
          if (variables.state === 'on' && variables.timeout > 2000) {
            return `${style}<g class="start_timeout">${path}</g></svg>`;
          }
          if (variables.state === 'off' && variables.timeout > 2000) {
            return `${style}<g class="end_timeout">${path}</g></svg>`;
          }
        ]]]

  icon_door:
    styles:
      custom_fields:
        icon:
          - width: 80%
          - margin-left: -15%
    custom_fields:
      icon: >
        [[[
          const room = 'd="M11.4,1.4h27.2v43.1H11.4V1.4z" fill="#bcbcbc"';
          const door = 'd="M11.4 1.4v43.1h27.2V1.4H11.4zm23 23.4c0 1.1-.9 1.9-1.9 1.9h0c-1.1 0-1.9-.9-1.9-1.9V21c0-1.1.9-1.9 1.9-1.9h0c1.1 0 1.9.9 1.9 1.9v3.8z"';

          if (states["binary_sensor.front_door_open"].state === 'on' && variables.timeout < 2000) {
            return `
              <style>
                .state {
                  animation: state 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
                }
                .opacity {
                  animation: opacity 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
                }
                @keyframes state {
                  0% {
                    transform: none;
                    fill: #9da0a2;
                  }
                  100% {
                    transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                    fill: #b68349;
                  }
                }
                @keyframes opacity {
                  0% {
                    opacity: 0;
                  }
                  100% {
                    opacity: 1;
                  }
                }
              </style>
              <svg viewBox="0 0 50 50">
                <path class="opacity" ${room}/>
                <path class="state" ${door}/>
              </svg>
            `;
          }

          if (states["binary_sensor.front_door_open"].state === 'on' && variables.timeout > 2000) {
            return `
              <svg viewBox="0 0 50 50">
                <style>
                  .state_timeout_on {
                    transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                    fill: #b68349;
                  }
                </style>
                <path ${room}/>
                <path class="state_timeout_on" ${door}/>
              </svg>
            `;
          }

          return states["binary_sensor.front_door_open"].state === 'off' && variables.timeout < 2000 ? `
            <style>
              .state {
                animation: state 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              .opacity {
                animation: opacity 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              .reverse {
                animation-direction: reverse;
              }
              @keyframes state {
                0% {
                  transform: none;
                  fill: #9da0a2;
                }
                100% {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              }
              @keyframes opacity {
                0% {
                  opacity: 0;
                }
                100% {
                  opacity: 1;
                }
              }
            </style>
            <svg viewBox="0 0 50 50">
              <path class="opacity reverse" ${room}/>
              <path class="state reverse" ${door}/>
            </svg>
          ` : `
            <svg viewBox="0 0 50 50">
              <style>
                .state_timeout_off {
                  fill: var(--state-icon-color);
                }
              </style>
              <path class="state_timeout_off" ${door}/>
            </svg>
          `;
        ]]]

  icon_closet:
    styles:
      custom_fields:
        icon:
          - width: 80%
          - margin-left: -15%
    custom_fields:
      icon: >
        [[[
          const room = 'd="M11.4,1.4h27.2v43.1H11.4V1.4z" fill="#bcbcbc"';
          const door = 'd="M11.4 1.4v43.1h27.2V1.4H11.4zm23 23.4c0 1.1-.9 1.9-1.9 1.9h0c-1.1 0-1.9-.9-1.9-1.9V21c0-1.1.9-1.9 1.9-1.9h0c1.1 0 1.9.9 1.9 1.9v3.8z"';

          if (variables.state === 'on' && variables.timeout < 2000) {
            return `
              <style>
                .state {
                  animation: state 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
                }
                .opacity {
                  animation: opacity 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
                }
                @keyframes state {
                  0% {
                    transform: none;
                    fill: #9da0a2;
                  }
                  100% {
                    transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                    fill: #b68349;
                  }
                }
                @keyframes opacity {
                  0% {
                    opacity: 0;
                  }
                  100% {
                    opacity: 1;
                  }
                }
              </style>
              <svg viewBox="0 0 50 50">
                <path class="opacity" ${room}/>
                <path class="state" ${door}/>
              </svg>
            `;
          }

          if (variables.state === 'on' && variables.timeout > 2000) {
            return `
              <svg viewBox="0 0 50 50">
                <style>
                  .state_timeout_on {
                    transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                    fill: #b68349;
                  }
                </style>
                <path ${room}/>
                <path class="state_timeout_on" ${door}/>
              </svg>
            `;
          }

          return variables.state === 'off' && variables.timeout < 2000 ? `
            <style>
              .state {
                animation: state 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              .opacity {
                animation: opacity 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              .reverse {
                animation-direction: reverse;
              }
              @keyframes state {
                0% {
                  transform: none;
                  fill: #9da0a2;
                }
                100% {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              }
              @keyframes opacity {
                0% {
                  opacity: 0;
                }
                100% {
                  opacity: 1;
                }
              }
            </style>
            <svg viewBox="0 0 50 50">
              <path class="opacity reverse" ${room}/>
              <path class="state reverse" ${door}/>
            </svg>
          ` : `
            <svg viewBox="0 0 50 50">
              <style>
                .state_timeout_off {
                  fill: var(--state-icon-color);
                }
              </style>
              <path class="state_timeout_off" ${door}/>
            </svg>
          `;
        ]]]

  icon_away:
    state_display: Auto
    styles:
      card:
        - transition: all 0.3s ease-out
      custom_fields:
        icon:
          - width: 79%
          - fill: >
              [[[ return variables.state === 'on' ? '#516d82' : '#9da0a2'; ]]]
    custom_fields:
      icon: >
        [[[
          const state = variables.state === 'on' ? 'on' : null;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes on {
                  10%,
                  20%,
                  100% {
                    transform: rotateZ(0deg);
                  }
                  30%,
                  50%,
                  70% {
                    transform: rotateZ(7deg);
                  }
                  90% {
                    transform: rotateZ(3deg);
                  }
                  40%,
                  60%,
                  80% {
                    transform: rotateZ(-7deg);
                  }
                }
                .on {
                  animation: on 1.35s cubic-bezier(0.5, 1, 0.89, 1);
                  animation-fill-mode: both;
                  transform-origin: 70% 80%;
                  animation-delay: 0s;
                }
              </style>
              <path class="${state}" d="M32.1 18.4s.3-1.6.7-2.1c.3-.6.9-1.4 1.6-1.8.6-.4 1.1-.7 1.4-.7s.7-.1 1 .1.6.4.8 1.3l.3 2.7.1 2.4.2 4.1c0 .3.2 3.1.2 3.3s.2 2.7.2 3.2l-.1 2.5c.1 1.6.5 3.1-.2 4.6-.6 1.4-1.7 2.7-2.9 3.6-.5.4-1.9 1.3-2.9 1.7-1.1.5-2.2.8-3.3 1.1-.5.1-1.4.4-2.3.3s-1.8-.6-2.1-1l-1.6-2.3c-.6-.8-2.1-2.3-2.3-2.5l-2.7-2.8c-.2-.2-2.7-3.5-2.9-3.8l-3.1-4.7-1.8-3.2-1.5-2.8-.9-1.8c-.1-.2-.3-1.1-.2-1.4.3-1.2 1.4-1.4 2.3-.7.3.2.9 1 1.1 1.3s6.1 8.1 6.1 8.1c.2.3.7.3.9 0s-.1-.7-.2-.9c-.4-.6-8.3-11.5-8.3-11.5s-.6-.9-.7-1.1c-.3-1.1 0-2.3 1.1-2.7s1.9.3 2.6 1.1c.3.3 8.3 11.5 8.3 11.5.2.2.3.3.5.3.3 0 .5-.4.4-.7-.1-.2-.5-.9-.5-.9L11.8 9c-.6-1-.9-2-.1-3 .7-.8 2.2-1.3 3-.2.3.3 10.1 14.3 10.1 14.3.2.2.5.4.7.3.5-.1.3-.7.1-1-.1-.2-8.4-11.8-8.4-11.8-.4-.9-.6-2 .2-2.8 1-1.1 2.5-.5 3.3.5.2.3 1 1.4 1 1.4l2.7 3.7c.1.2 3.4 4.4 3.8 4.8.9 1.1 1.8 2.2 2.7 3.2l.5.5c.1.1.1.4.1.8 0 1.3.1 2.6.1 3.9 0 .2.1.4.2.6.3.3.6.1.7-.2.1-.2 0-2.4 0-2.7-.3-.3-.5-1.3-.4-2.9zM12.2 46.9s-2.8-.8-4.8-2.7-2.6-2.7-2.8-3-1.8-3-2-3.6c-.2-.5-.2-.7.2-1 .4-.4 1-.5 1.3.1.1.2.4 1 .5 1.2s1 1.9 1.7 2.8 1.6 2.2 4.4 3.8c.6.3 1.2.6 1.9.9.3.1.6.2.8.4.1.2.1.6-.1.8-.2.4-.7.4-1.1.3zM7.1 30.7l.9 3.1c.3.7 1.1 2.3 1.9 3.3s2.4 2.6 3.4 3.2 2 1.1 3 1.5c1 .3 1.1.4 1.2.5.3.4.2 1.2-.4 1.3-.2 0-1.2 0-1.8-.3L12 41.7c-.5-.4-3.9-3.1-5.1-6S5.3 31 5.2 30.4s-.2-1.1 0-1.4c.3-.4.9-.8 1.3-.3.2.3.3.6.3.9.1 0 .2.8.3 1.1zm26.8-25s.2-.1.5-.1.8.3 1.4.7 1.9 1 3.6 2.9 2.9 3.9 3.4 5.8c.5 1.8.8 3.1.9 5.5 0 .5.1 1.6 0 1.7-.2.5-.5.7-1 .7-.6 0-.7-.5-.7-1l-.1-2.9c-.1-.6-.3-1.9-.7-2.9-.3-1-.7-2.3-1.7-3.6-.9-1.3-2.1-2.8-3.2-3.5l-2.4-1.5c-.6-.6-.7-1.2 0-1.8zm4.9-2.5s.3-.2.5-.1c.2 0 .7.3.9.4s2.1 1.3 3.6 3c1.5 1.6 3.5 5.1 3.7 7.4.1.4.2.9 0 1-.2.2-.4.4-.7.4-.2 0-.5 0-.7-.1-.1-.2-.4-1.1-.4-1.3s-.6-2-1.1-3.1C44 9.7 43.5 8.5 42 7.1s-2.2-1.9-2.8-2.2-1.1-.6-1.1-1c.1-.3.3-.6.7-.7z"/>
            </svg>
          `;
        ]]]

  icon_home:
    state_display: Auto
    styles:
      card:
        - transition: all 0.3s ease-out
      custom_fields:
        icon:
          - width: 70%
          - fill: >
              [[[ return variables.state === 'on' ? '#c7983e' : '#9da0a2'; ]]]
    custom_fields:
      icon: >
        [[[
          const state = variables.state === 'on' ? 'on' : null;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes on {
                  from,
                  20%,
                  40%,
                  60%,
                  80%,
                  to {
                    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
                  }
                  0% {
                    transform: scale(0.3);
                  }
                  20% {
                    transform: scale(1.1);
                  }
                  40% {
                    transform: scale(0.9);
                  }
                  60% {
                    transform: scale(1.03);
                  }
                  80% {
                    transform: scale(0.97);
                  }
                  to {
                    transform: scale(1);
                  }
                }
                .on {
                  animation: on 1s;
                  transform-origin: center;
                }
              </style>
              <path class="${state}" d="M42.2 28.3c0-.8-.2-1-.2-1L26 12.1s-.5-.4-1-.4-1 .3-1 .3L8.2 27.1c-.4.5-.4.9-.4.9v18.3c0 1.1.9 2 1.9 2h8.2a1.47 1.47 0 0 0 1.5-1.5v-14a1.47 1.47 0 0 1 1.5-1.5h8.4a1.47 1.47 0 0 1 1.5 1.5v14a1.47 1.47 0 0 0 1.5 1.5h8.2c1.1 0 2-.9 2-1.9 0-.2-.3-18.1-.3-18.1zM7.3 25l-1.6 1.5s-.3.3-.5.3-.5 0-.8-.2c-.2-.2-2-2.8-2-2.8s-.1-.4-.1-.7c.1-.3.2-.7.3-.8.4-.1 21.5-20.1 21.5-20.1s.4-.3.9-.3c.4 0 .8.1.9.2s.5.4.5.4l8.9 8.5V6s.1-.4.2-.7c.1-.2.3-.3.4-.3s.3-.1.3-.1h3s.3.1.4.3a1.08 1.08 0 0 1 .3.7v9.8l7.2 6.9s.2.3.3.4c.1.2.1.7.1.7 0 .1-.1.4-.2.5s-1.6 2.5-1.6 2.5-.1.3-.3.3c-.2.1-.4.1-.7 0-.2-.1-.5-.4-.5-.4L26.4 9.4s-.3-.3-.5-.4-.4-.2-.8-.2-.5.1-.8.1c-.1.1-.4.3-.7.5C23.3 9.8 7.3 25 7.3 25z"/>
            </svg>
          `;
        ]]]
